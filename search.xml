<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>OpenStack-Train认证keystone服务安装(二)</title>
    <url>/2021/01/29/OpenStack-Train%E8%AE%A4%E8%AF%81keystone%E6%9C%8D%E5%8A%A1%E5%AE%89%E8%A3%85-%E4%BA%8C/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>这个章节主要介绍在控制节点如何安装keystone组件。</p>
<a id="more"></a>

<h1 id="keystone的两大功能"><a href="#keystone的两大功能" class="headerlink" title="keystone的两大功能"></a>keystone的两大功能</h1><ol>
<li><p>用户认证</p>
<p>用户认证相关：<br>user： 用户<br>project：项目（以前叫租户）<br>token: 令牌，认证成功了分配一个令牌<br>role： 角色</p>
</li>
</ol>
<ol start="2">
<li><p>服务目录</p>
<p>service：服务<br>endpoint： 端点，服务对应的 URL。每个服务都有 3 个 URL：<br>public url 可以全局访问<br>internal url 只能被局域网访问，openstack 服务之间访问<br>admin url 从常规的访问分离出来，只能 admin 使用。</p>
</li>
</ol>
<h1 id="创库授权"><a href="#创库授权" class="headerlink" title="创库授权"></a>创库授权</h1><ol>
<li><p>创建数据库及授予keystone数据库的适当访问权限</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mysql</span><br><span class="line">CREATE DATABASE keystone;</span><br><span class="line">GRANT ALL PRIVILEGES ON keystone.* TO &#x27;keystone&#x27;@&#x27;localhost&#x27; \</span><br><span class="line">IDENTIFIED BY &#x27;KEYSTONE_DBPASS&#x27;;</span><br><span class="line">GRANT ALL PRIVILEGES ON keystone.* TO &#x27;keystone&#x27;@&#x27;%&#x27; \</span><br><span class="line">IDENTIFIED BY &#x27;KEYSTONE_DBPASS&#x27;;</span><br></pre></td></tr></table></figure></li>
<li><p>安装keystone服务相关软件包</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">yum install openstack-keystone httpd mod_wsgi -y</span><br></pre></td></tr></table></figure></li>
<li><p>修改配置文件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cat &gt;&gt;&#x2F;etc&#x2F;keystone&#x2F;keystone.conf&lt;&lt;eof</span><br><span class="line">[DEFAULT]</span><br><span class="line">[application_credential]</span><br><span class="line">[assignment]</span><br><span class="line">[auth]</span><br><span class="line">[cache]</span><br><span class="line">[catalog]</span><br><span class="line">[cors]</span><br><span class="line">[credential]</span><br><span class="line">[database]</span><br><span class="line">connection &#x3D; mysql+pymysql:&#x2F;&#x2F;keystone:KEYSTONE_DBPASS@controller&#x2F;keystone </span><br><span class="line">[domain_config]</span><br><span class="line">[endpoint_filter]</span><br><span class="line">[endpoint_policy]</span><br><span class="line">[eventlet_server]</span><br><span class="line">[federation]</span><br><span class="line">[fernet_receipts]</span><br><span class="line">[fernet_tokens]</span><br><span class="line">[healthcheck]</span><br><span class="line">[identity]</span><br><span class="line">[identity_mapping]</span><br><span class="line">[jwt_tokens]</span><br><span class="line">[ldap]</span><br><span class="line">[memcache]</span><br><span class="line">servers &#x3D; controller:11211</span><br><span class="line">[oauth1]</span><br><span class="line">[oslo_messaging_amqp]</span><br><span class="line">[oslo_messaging_kafka]</span><br><span class="line">[oslo_messaging_notifications]</span><br><span class="line">[oslo_messaging_rabbit]</span><br><span class="line">[oslo_middleware]</span><br><span class="line">[oslo_policy]</span><br><span class="line">[policy]</span><br><span class="line">[profiler]</span><br><span class="line">[receipt]</span><br><span class="line">[resource]</span><br><span class="line">[revoke]</span><br><span class="line">[role]</span><br><span class="line">[saml]</span><br><span class="line">[security_compliance]</span><br><span class="line">[shadow_users]</span><br><span class="line">[token]</span><br><span class="line">provider &#x3D; fernet</span><br><span class="line">[tokenless_auth]</span><br><span class="line">[totp]</span><br><span class="line">[trust]</span><br><span class="line">[unified_limit]</span><br><span class="line">[wsgi]</span><br><span class="line">eof</span><br></pre></td></tr></table></figure></li>
<li><p>初始化数据库</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">su -s &#x2F;bin&#x2F;sh -c &quot;keystone-manage db_sync&quot; keystone</span><br></pre></td></tr></table></figure></li>
<li><p>初始化Fernet-key密钥存储库</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">keystone-manage fernet_setup --keystone-user keystone --keystone-group keystone</span><br><span class="line">keystone-manage credential_setup --keystone-user keystone --keystone-group keystone</span><br></pre></td></tr></table></figure>

</li>
<li><p>引导身份服务</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">keystone-manage bootstrap --bootstrap-password ADMIN_PASS \</span><br><span class="line">  --bootstrap-admin-url http://controller:5000/v3/ \</span><br><span class="line">  --bootstrap-internal-url http://controller:5000/v3/ \</span><br><span class="line">  --bootstrap-public-url http://controller:5000/v3/ \</span><br><span class="line">  --bootstrap-region-id RegionOne</span><br></pre></td></tr></table></figure></li>
<li><p>配置Apche httpd服务</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sed -i &quot;s&#x2F;#ServerName www.example.com:80&#x2F;ServerName controller&#x2F;&quot; &#x2F;etc&#x2F;httpd&#x2F;conf&#x2F;httpd.conf</span><br></pre></td></tr></table></figure></li>
<li><p>配置软连接</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ln -s /usr/share/keystone/wsgi-keystone.conf /etc/httpd/conf.d/</span><br></pre></td></tr></table></figure></li>
<li><p>启动http服务</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">systemctl enable httpd &amp;&amp; systemctl start httpd</span><br><span class="line">netstat -auntlp|grep 5000</span><br></pre></td></tr></table></figure></li>
<li><p>创建环境变量</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cat &gt;&gt;.bashrc&lt;&lt;eof</span><br><span class="line">export OS_USERNAME&#x3D;admin </span><br><span class="line">export OS_PASSWORD&#x3D;ADMIN_PASS</span><br><span class="line">export OS_PROJECT_NAME&#x3D;admin</span><br><span class="line">export OS_USER_DOMAIN_NAME&#x3D;Default</span><br><span class="line">export OS_PROJECT_DOMAIN_NAME&#x3D;Default</span><br><span class="line">export OS_AUTH_URL&#x3D;http:&#x2F;&#x2F;controller:5000&#x2F;v3</span><br><span class="line">export OS_IDENTITY_API_VERSION&#x3D;3</span><br><span class="line">export OS_IMAGE_API_VERSION&#x3D;2</span><br><span class="line">eof</span><br></pre></td></tr></table></figure></li>
<li><p>验证：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">openstack service list</span><br><span class="line">openstack endpoint list</span><br></pre></td></tr></table></figure>
<p><img src="/_posts/'../images/OpenStack-Train%E8%AE%A4%E8%AF%81keystone%E6%9C%8D%E5%8A%A1%E5%AE%89%E8%A3%85-%E4%BA%8C'/image-20210129174824518.png" alt="image-20210129174824518"></p>
</li>
<li><p>创建域</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">openstack domain create --description &quot;An Example Domain&quot; example</span><br></pre></td></tr></table></figure></li>
<li><p>创建service项目、myuser用户</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">openstack project create --domain default \</span><br><span class="line">  --description &quot;Service Project&quot; service</span><br><span class="line">openstack project create --domain default --description &quot;Demo Project&quot; myproject</span><br><span class="line">openstack user create --domain default --password MYUSER_PASS myuser</span><br><span class="line"></span><br></pre></td></tr></table></figure></li>
<li><p>创建普通用户角色（区别于admin用户）</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">openstack role create myrole</span><br></pre></td></tr></table></figure>

</li>
<li><p>将myrole角色添加到myproject项目和myuser用户</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">openstack role add --project myproject --user myuser myrole</span><br></pre></td></tr></table></figure>

</li>
<li><p>查看权限分配</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">openstack user list</span><br><span class="line">openstack role list</span><br><span class="line">openstack project list</span><br><span class="line">openstack role assignment list</span><br></pre></td></tr></table></figure>




</li>
</ol>
]]></content>
      <categories>
        <category>openstack</category>
      </categories>
  </entry>
  <entry>
    <title>OpenStack-Train镜像glance服务安装-(三)</title>
    <url>/2021/02/01/OpenStack-Train%E9%95%9C%E5%83%8Fglance%E6%9C%8D%E5%8A%A1%E5%AE%89%E8%A3%85-%E4%B8%89/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>本章节描述的是在控制节点如何安装镜像服务，这个配置采用本地硬盘存储镜像</p>
<a id="more"></a>

<h1 id="创建数据库授权"><a href="#创建数据库授权" class="headerlink" title="创建数据库授权"></a>创建数据库授权</h1><ol>
<li><p>创建数据库表</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mysql -u root -p</span><br><span class="line">CREATE DATABASE glance;</span><br><span class="line">GRANT ALL PRIVILEGES ON glance.* TO &#x27;glance&#x27;@&#x27;localhost&#x27; \</span><br><span class="line">  IDENTIFIED BY &#x27;GLANCE_DBPASS&#x27;;</span><br><span class="line">GRANT ALL PRIVILEGES ON glance.* TO &#x27;glance&#x27;@&#x27;%&#x27; \</span><br><span class="line">  IDENTIFIED BY &#x27;GLANCE_DBPASS&#x27;;</span><br></pre></td></tr></table></figure>

</li>
<li><p>在keystone创建glance用户关联角色</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">openstack user create --domain default --password-prompt GLANCE_DBPASS</span><br></pre></td></tr></table></figure>
<p>将glance用户加入service项目授予admin角色</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">openstack role add --project service --user glance admin</span><br></pre></td></tr></table></figure>
<p>在keystone上创建服务实体和注册api</p>
<p>创建glance服务实体</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">openstack service create --name glance \</span><br><span class="line">  --description &quot;OpenStack Image&quot; image</span><br></pre></td></tr></table></figure></li>
<li><p>创建镜像服务api端点</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">openstack endpoint create --region RegionOne \</span><br><span class="line"> image public http://controller:9292;</span><br><span class="line">openstack endpoint create --region RegionOne \</span><br><span class="line"> image internal http://controller:9292;</span><br><span class="line">openstack endpoint create --region RegionOne \</span><br><span class="line"> image admin http://controller:9292;</span><br><span class="line">   </span><br></pre></td></tr></table></figure>
<h1 id="安装服务和相应软件包"><a href="#安装服务和相应软件包" class="headerlink" title="安装服务和相应软件包"></a>安装服务和相应软件包</h1></li>
<li><p>安装软件包</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yum install openstack-glance -y</span><br></pre></td></tr></table></figure>

</li>
<li><p>修改配置文件</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cp /etc/glance/glance-api.conf&#123;,.bak&#125;;</span><br><span class="line">grep &#x27;^[a-Z\[]&#x27; /etc/glance/glance-api.conf.bak &gt;/etc/glance/glance-api.conf;</span><br><span class="line">cat &gt;&gt;/etc/glance/glance-api.conf&lt;&lt;eof</span><br><span class="line">[DEFAULT]</span><br><span class="line">[cinder]</span><br><span class="line">[cors]</span><br><span class="line">[database]</span><br><span class="line">connection = mysql+pymysql://glance:GLANCE_DBPASS@controller/glance</span><br><span class="line">[file]</span><br><span class="line">[glance.store.http.store]</span><br><span class="line">[glance.store.rbd.store]</span><br><span class="line">[glance.store.sheepdog.store]</span><br><span class="line">[glance.store.swift.store]</span><br><span class="line">[glance.store.vmware_datastore.store]</span><br><span class="line">[glance_store]</span><br><span class="line">stores = file,http</span><br><span class="line">default_store = file</span><br><span class="line">filesystem_store_datadir = /Data/servers/glance/images/</span><br><span class="line">[image_format]</span><br><span class="line">[keystone_authtoken]</span><br><span class="line">www_authenticate_uri  = http://controller:5000</span><br><span class="line">auth_url = http://controller:5000</span><br><span class="line">memcached_servers = controller:11211</span><br><span class="line">auth_type = password</span><br><span class="line">project_domain_name = Default</span><br><span class="line">user_domain_name = Default</span><br><span class="line">project_name = service</span><br><span class="line">username = glance</span><br><span class="line">password = GLANCE_DBPASS</span><br><span class="line">[oslo_concurrency]</span><br><span class="line">[oslo_messaging_amqp]</span><br><span class="line">[oslo_messaging_kafka]</span><br><span class="line">[oslo_messaging_notifications]</span><br><span class="line">[oslo_messaging_rabbit]</span><br><span class="line">[oslo_middleware]</span><br><span class="line">[oslo_policy]</span><br><span class="line">[paste_deploy]</span><br><span class="line">flavor = keystone</span><br><span class="line">[profiler]</span><br><span class="line">[store_type_location_strategy]</span><br><span class="line">[task]</span><br><span class="line">[taskflow_executor]</span><br><span class="line">eof</span><br><span class="line"></span><br></pre></td></tr></table></figure></li>
<li><p>同步数据库并验证</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">su -s &#x2F;bin&#x2F;sh -c &quot;glance-manage db_sync&quot; glance;</span><br><span class="line">mysql glance -e &quot;show tables&quot;;</span><br></pre></td></tr></table></figure></li>
<li><p>启动服务并设置为开机启动</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">systemctl enable openstack-glance-api.service</span><br><span class="line">systemctl start openstack-glance-api.service</span><br></pre></td></tr></table></figure>
<h1 id="验证操作"><a href="#验证操作" class="headerlink" title="验证操作"></a>验证操作</h1></li>
<li><p>下载镜像,上传cirros-0.3.4-x86_64-disk.img镜像</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">wget http://download.cirros-cloud.net/0.4.0/cirros-0.4.0-x86_64-disk.imgc</span><br></pre></td></tr></table></figure>

</li>
<li><p>上传镜像</p>
<p># 执行命令上传镜像<br># 使用qcow2格式上传，bare容器格式上传到镜像服务<br># 设置公共可见，这样所所有的项目都可以访问</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">glance image-create --name &quot;cirros&quot; \</span><br><span class="line">  --file cirros-0.4.0-x86_64-disk.img \</span><br><span class="line">  --disk-format qcow2 --container-format bare \</span><br><span class="line">  --visibility public</span><br></pre></td></tr></table></figure>
<p>验证上传镜像</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">openstack  image list</span><br></pre></td></tr></table></figure>
<p><img src="/images/OpenStack-Train%E9%95%9C%E5%83%8Fglance%E6%9C%8D%E5%8A%A1%E5%AE%89%E8%A3%85-%E4%B8%89/image-20210201105609772.png" alt="image-20210201105609772"></p>
</li>
</ol>
<p>参考文档：</p>
<p><a href="https://docs.openstack.org/glance/train/install/install-obs.html#prerequisites">https://docs.openstack.org/glance/train/install/install-obs.html#prerequisites</a></p>
<p><a href="http://poweroff.cn/openstack/357.html">http://poweroff.cn/openstack/357.html</a></p>
]]></content>
      <categories>
        <category>openstack</category>
      </categories>
  </entry>
  <entry>
    <title>openstack train 安装环境准备</title>
    <url>/2021/01/26/openstack-train-%E5%AE%89%E8%A3%85%E7%8E%AF%E5%A2%83%E5%87%86%E5%A4%87/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>本次测试环境采用3台DELL物理机进行安装部署，管理vlan 33,业务vlan 11,服务器业务网卡不配置ip地址,采用provider vlan网络(通俗来讲就是网关在物理设备上面)  </p>
<a id="more"></a>  

<h1 id="服务器规划"><a href="#服务器规划" class="headerlink" title="服务器规划"></a>服务器规划</h1><p>​    </p>
<table>
<thead>
<tr>
<th>管理IP</th>
<th>业务IP 段</th>
<th>硬件信息</th>
<th>用途</th>
</tr>
</thead>
<tbody><tr>
<td>10.14.32.11</td>
<td>10.14.11.0/24</td>
<td>2路*8core、4T、256G</td>
<td>控制节点、网络节点</td>
</tr>
<tr>
<td>10.14.32.12</td>
<td>10.14.11.0/24</td>
<td>2路*8core、4T、256G</td>
<td>计算节点</td>
</tr>
<tr>
<td>10.14.32.13</td>
<td>10.14.11.0/24</td>
<td>2路*8core、4T、256G</td>
<td>计算节点</td>
</tr>
</tbody></table>
<h1 id="软件规划"><a href="#软件规划" class="headerlink" title="软件规划"></a>软件规划</h1><table>
<thead>
<tr>
<th>操作系统版本</th>
<th>软件版本</th>
</tr>
</thead>
<tbody><tr>
<td>Centos7.6</td>
<td>openstack-train</td>
</tr>
</tbody></table>
<h1 id="主机名称配置"><a href="#主机名称配置" class="headerlink" title="主机名称配置"></a>主机名称配置</h1><p>控制节点  </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hostnamectl set-hostname bjyz-10-14-32-11</span><br></pre></td></tr></table></figure>
<p>计算节点  </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hostnamectl set-hostname bjyz-10-14-32-12</span><br><span class="line">hostnamectl set-hostname bjyz-10-14-32-13</span><br></pre></td></tr></table></figure>


<h1 id="时间服务器"><a href="#时间服务器" class="headerlink" title="时间服务器"></a>时间服务器</h1><p>控制节点从互联网同步时间，计算节点从控制节点同步时间，centos7 采用chrony进行时间同步  </p>
<ol>
<li><p>所有节点安装chrony软件  </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yum install chrony -y</span><br></pre></td></tr></table></figure>

</li>
<li><p>控制节点修改配置，本文只有允许两个网段可以同步时间</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cat &gt;&gt;/etc/chrony.conf &lt;&lt;eof</span><br><span class="line">server ntp1.aliyun.com  iburst</span><br><span class="line">driftfile /var/lib/chrony/drift</span><br><span class="line">makestep 1.0 3</span><br><span class="line">rtcsync</span><br><span class="line">allow 10.14.32.0/24</span><br><span class="line">allow 10.14.11.0/24</span><br><span class="line">eof</span><br></pre></td></tr></table></figure></li>
<li><p>控制节点启动chronyd 服务</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">systemctl start chronyd </span><br></pre></td></tr></table></figure>
<p>验证同步结果 </p>
 <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">chronyc sources -v</span><br></pre></td></tr></table></figure>
<p><img src="/images/openstack-train-%E5%AE%89%E8%A3%85%E7%8E%AF%E5%A2%83%E5%87%86%E5%A4%87/image-20210129151301718.png" alt="image-20210129151301718"></p>
</li>
<li><p>计算节点配置chrony服务</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cat &gt;&gt;/etc/chrony.conf&lt;&lt;eof</span><br><span class="line">server 10.14.32.11</span><br><span class="line">driftfile /var/lib/chrony/drift</span><br><span class="line">makestep 1.0 3</span><br><span class="line">rtcsync</span><br><span class="line">logdir /var/log/chrony</span><br><span class="line">eof</span><br></pre></td></tr></table></figure>
<p>计算节点启动chronyd服务并验证</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">systemctl start chronyd &amp;&amp; systemctl enable chronyd</span><br></pre></td></tr></table></figure>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">chronyc sources -v</span><br></pre></td></tr></table></figure>
<p><img src="/images/openstack-train-%E5%AE%89%E8%A3%85%E7%8E%AF%E5%A2%83%E5%87%86%E5%A4%87/image-20210129152910069.png" alt="image-20210129152910069"></p>
</li>
</ol>
<h1 id="配置主机hosts"><a href="#配置主机hosts" class="headerlink" title="配置主机hosts"></a>配置主机hosts</h1><p>所有节点都要配置主机hosts文件</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cat &gt;&gt;/etc/hosts&lt;&lt;eof</span><br><span class="line">10.14.32.11 controller</span><br><span class="line">10.14.32.11 bjyz-10-14-32-11</span><br><span class="line">10.14.32.12 bjyz-10-14-32-12</span><br><span class="line">10.14.32.13 bjyz-10-14-32-13</span><br><span class="line">eof</span><br></pre></td></tr></table></figure>
<h1 id="配置主机互信"><a href="#配置主机互信" class="headerlink" title="配置主机互信"></a>配置主机互信</h1><p>控制节点到计算节点免密登录,全部默认即可</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa</span><br></pre></td></tr></table></figure>
<p>拷贝公钥到计算节点</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">for i in `seq 11 13`;do ssh-copy-id -i .ssh/id_rsa.pub 10.14.32.$i;done</span><br></pre></td></tr></table></figure>
<h1 id="配置openstack-yum-源"><a href="#配置openstack-yum-源" class="headerlink" title="配置openstack yum 源"></a>配置openstack yum 源</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"> cat &gt;&gt;/etc/yum.repos.d/openstack.repo&lt;&lt;eof</span><br><span class="line">[openstack]</span><br><span class="line">name=openstack</span><br><span class="line">baseurl=https://mirrors.aliyun.com/centos/7/cloud/x86_64/openstack-train</span><br><span class="line">gpgcheck=0</span><br><span class="line">enabled=1</span><br><span class="line">eof</span><br></pre></td></tr></table></figure>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yum clean all</span><br><span class="line">yum makecache</span><br></pre></td></tr></table></figure>


<pre><code># 安装数据库
</code></pre>
<ol>
<li>安装软件包</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yum install mariadb mariadb-server python2-PyMySQL -y</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>修改mariadb配置文件</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cat &gt;&gt;/etc/my.cnf&lt;&lt;eof</span><br><span class="line"><span class="meta">#</span></span><br><span class="line"><span class="bash"><span class="comment"># This group is read both both by the client and the server</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> use it <span class="keyword">for</span> options that affect everything</span></span><br><span class="line"><span class="meta">#</span></span><br><span class="line"><span class="bash">[client-server]</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span></span><br><span class="line"><span class="bash"><span class="comment"># This group is read by the server</span></span></span><br><span class="line"><span class="meta">#</span></span><br><span class="line"><span class="bash">[mysqld]</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Disabling symbolic-links is recommended to prevent assorted security risks</span></span><br><span class="line">symbolic-links=0</span><br><span class="line">basedir=/Data/servers/mysql</span><br><span class="line">datadir=/Data/servers/mysql</span><br><span class="line">socket=/Data/servers/mysql/mysql.sock</span><br><span class="line"><span class="meta">#</span></span><br><span class="line"><span class="bash"><span class="comment"># include all files from the config directory</span></span></span><br><span class="line"><span class="meta">#</span></span><br><span class="line"><span class="bash">!includedir /etc/my.cnf.d</span></span><br><span class="line">[client]</span><br><span class="line">socket=/Data/servers/mysql/mysql.sock</span><br><span class="line">eof</span><br></pre></td></tr></table></figure>


<ol start="3">
<li>增加MySQL openstack独立配置文件</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"> cat &gt;&gt;/etc/my.cnf.d/openstack.cnf&lt;&lt;eof</span><br><span class="line">[mysqld]</span><br><span class="line">basedir=/Data/servers/mysql</span><br><span class="line">datadir=/Data/servers/mysql</span><br><span class="line">socket=/Data/servers/mysql/mysql.sock</span><br><span class="line">bind-address = 10.14.32.11</span><br><span class="line">default-storage-engine = innodb</span><br><span class="line">innodb_file_per_table = on</span><br><span class="line">max_connections = 4096</span><br><span class="line">collation-server = utf8_general_ci</span><br><span class="line">character-set-server = utf8</span><br><span class="line">eof</span><br></pre></td></tr></table></figure>
<ol start="4">
<li>启动mariadb及配置开机自启动</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">systemctl start mariadb &amp;&amp; systemctl enable mariadb</span><br></pre></td></tr></table></figure>
<ol start="5">
<li><p>进行mariadb安全设置,优化mariadb最大连接</p>
<p>改mariadb.service文件</p>
</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cat &gt;&gt;/usr/lib/systemd/system/mariadb.service&lt;&lt;eof</span><br><span class="line">LimitNOFILE=655350</span><br><span class="line">LimitNPROC=655350</span><br><span class="line">eof</span><br></pre></td></tr></table></figure>
<p>​        重新加载系统服务，并重启mariadb</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">systemctl --system daemon-reload</span><br><span class="line">systemctl restart mariadb.service</span><br></pre></td></tr></table></figure>
<h1 id="安装并配置消息队列"><a href="#安装并配置消息队列" class="headerlink" title="安装并配置消息队列"></a>安装并配置消息队列</h1><ol>
<li>安装并启动rabbitmq</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yum install rabbitmq-server -y</span><br><span class="line">systemctl start rabbitmq-server &amp;&amp; systemctl enable rabbitmq-server</span><br><span class="line">rabbitmqctl add_user openstack RABBIT_PASS</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>在rabbitmq里添加openstack账户</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">rabbitmqctl set_user_tags openstack administrator</span><br></pre></td></tr></table></figure>
<ol start="3">
<li>查看指定用户权限信息</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">rabbitmqctl  list_user_permissions openstack</span><br></pre></td></tr></table></figure>
<ol start="4">
<li>给openstack用户配置写和读权限</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">rabbitmqctl set_permissions openstack &quot;.*&quot; &quot;.*&quot; &quot;.*&quot;</span><br></pre></td></tr></table></figure>
<ol start="5">
<li>启用rabbitmq web界面</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">rabbitmq-plugins enable rabbitmq_management</span><br></pre></td></tr></table></figure>
<p>访问<a href="http://10.14.32.11:15672/">http://10.14.32.11:15672/</a></p>
<p><img src="/images/openstack-train-%E5%AE%89%E8%A3%85%E7%8E%AF%E5%A2%83%E5%87%86%E5%A4%87/image-20210129164701856.png" alt="image-20210129164701856"></p>
<p>Rabbitmq默认的配置很低。所以需要优化五个参数：分别是：File descriptors、Socket descriptors、Erlang </p>
<p>vim /etc/security/limits.conf</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">root            soft    core            1000</span><br><span class="line">root            hard    core            unlimited</span><br><span class="line">root            soft    nofile          655350</span><br><span class="line">root            hard    nofile          655350</span><br><span class="line">root            soft    nproc           655350</span><br><span class="line">root            hard    nproc           655350</span><br><span class="line">root            soft    memlock         unlimited</span><br><span class="line">root            hard    memlock         unlimited</span><br><span class="line">root            soft    stack           unlimited</span><br><span class="line">root            hard    stack           unlimited</span><br><span class="line">root            soft    sigpending      1024000</span><br><span class="line">root            hard    sigpending      1024000</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<ol start="6">
<li>重启rabbitmq</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">rabbitmqctl stop</span><br><span class="line">rabbitmq-server -detached</span><br></pre></td></tr></table></figure>
<h1 id="安装memcached缓存密码使用"><a href="#安装memcached缓存密码使用" class="headerlink" title="安装memcached缓存密码使用"></a>安装memcached缓存密码使用</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">yum install memcached python-memcached -y</span><br></pre></td></tr></table></figure>
<p>修改memcached监听地址</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cat &gt;&gt;/etc/sysconfig/memcached&lt;&lt;eof</span><br><span class="line">PORT=&quot;11211&quot;</span><br><span class="line">USER=&quot;memcached&quot;</span><br><span class="line">MAXCONN=&quot;1024&quot;</span><br><span class="line">CACHESIZE=&quot;64&quot;</span><br><span class="line">OPTIONS=&quot;-l 127.0.0.1,::1,controller&quot;</span><br><span class="line">eof</span><br></pre></td></tr></table></figure>
<p>启动服务：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">systemctl start memcached &amp;&amp; systemctl enable memcached</span><br></pre></td></tr></table></figure>


<p>至此基本环境已经安装完毕。</p>
]]></content>
      <categories>
        <category>openstack</category>
      </categories>
  </entry>
  <entry>
    <title>OpenStack-Train-placement服务安装-(四)</title>
    <url>/2021/02/01/OpenStack-Train-placement%E6%9C%8D%E5%8A%A1%E5%AE%89%E8%A3%85-%E5%9B%9B/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>这个章节主要描述在控制节点上如何安装Placement 服务，Placement 主要作用是让用户和代码能够便捷的使用、管理、监控整个 OpenStack 的系统资源。</p>
<a id="more"></a>



<h1 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a>创建数据库</h1><ol>
<li><p>创建数据库</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mysql -u root -p</span><br><span class="line">CREATE DATABASE placement;</span><br><span class="line">GRANT ALL PRIVILEGES ON placement.* TO &#39;placement&#39;@&#39;localhost&#39; \</span><br><span class="line">  IDENTIFIED BY &#39;PLACEMENT_DBPASS&#39;;</span><br><span class="line">MariaDB [(none)]&gt; GRANT ALL PRIVILEGES ON placement.* TO &#39;placement&#39;@&#39;%&#39; \</span><br><span class="line">  IDENTIFIED BY &#39;PLACEMENT_DBPASS&#39;;</span><br></pre></td></tr></table></figure></li>
<li><p>配置用户和挂载点</p>
<p>用户默认使用 <code>PLACEMENT_PASS</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">openstack user create --domain default --password-prompt placement</span><br><span class="line">User Password:</span><br><span class="line">Repeat User Password:</span><br></pre></td></tr></table></figure></li>
<li><p>将placement用户加入service项目授予admin角色</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">openstack role add --project service --user placement admin</span><br></pre></td></tr></table></figure></li>
<li><p>创建服务实体</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">openstack service create --name placement \</span><br><span class="line">  --description &quot;Placement API&quot; placement</span><br></pre></td></tr></table></figure></li>
<li><p>创建服务端点</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">openstack endpoint create --region RegionOne \</span><br><span class="line">  placement public http://controller:8778</span><br><span class="line">openstack endpoint create --region RegionOne \</span><br><span class="line">  placement internal http://controller:8778</span><br><span class="line">openstack endpoint create --region RegionOne \</span><br><span class="line">  placement admin http://controller:8778</span><br></pre></td></tr></table></figure>
<h1 id="安装配置组件"><a href="#安装配置组件" class="headerlink" title="安装配置组件"></a>安装配置组件</h1></li>
<li><p>安装软件包</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">yum install openstack-placement-api</span><br></pre></td></tr></table></figure></li>
<li><p>修改配置</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cat &gt;&gt;/etc/placement/placement.conf&lt;&lt;eof</span><br><span class="line">[DEFAULT]</span><br><span class="line">[api]</span><br><span class="line">auth_strategy = keystone</span><br><span class="line">[cors]</span><br><span class="line">[keystone_authtoken]</span><br><span class="line">auth_url = http://controller:5000/v3</span><br><span class="line">memcached_servers = controller:11211</span><br><span class="line">auth_type = password</span><br><span class="line">project_domain_name = Default</span><br><span class="line">user_domain_name = Default</span><br><span class="line">project_name = service</span><br><span class="line">username = placement</span><br><span class="line">password = PLACEMENT_PASS</span><br><span class="line">[oslo_policy]</span><br><span class="line">[placement]</span><br><span class="line">[placement_database]</span><br><span class="line">connection = mysql+pymysql://placement:PLACEMENT_PASS@controller/placement</span><br><span class="line">[profiler]</span><br><span class="line">eof</span><br><span class="line"></span><br></pre></td></tr></table></figure></li>
<li><p>初始化数据库</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">su -s /bin/sh -c &quot;placement-manage db sync&quot; placement</span><br></pre></td></tr></table></figure></li>
<li><p>启动服务</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">systemctl restart httpd</span><br></pre></td></tr></table></figure>

</li>
</ol>
<p>参考文档:</p>
<p><a href="https://docs.openstack.org/placement/stein/install/install-rdo.html">https://docs.openstack.org/placement/stein/install/install-rdo.html</a></p>
<p><a href="http://poweroff.cn/openstack/358.html">http://poweroff.cn/openstack/358.html</a></p>
]]></content>
      <categories>
        <category>openstack</category>
      </categories>
  </entry>
  <entry>
    <title>OpenStack-Train-Nova服务控制节点安装-(五)</title>
    <url>/2021/02/01/OpenStack-Train-Nova%E6%9C%8D%E5%8A%A1%E6%8E%A7%E5%88%B6%E8%8A%82%E7%82%B9%E5%AE%89%E8%A3%85-%E4%BA%94/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>这个章节主要描述如何在控制节点安装计算服务。</p>
<a id="more"></a>

<h1 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a>创建数据库</h1><ol>
<li><p>创建nova使用的数据库</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mysql -u root -p</span><br><span class="line">CREATE DATABASE nova_api;</span><br><span class="line">CREATE DATABASE nova;</span><br><span class="line">CREATE DATABASE nova_cell0;</span><br></pre></td></tr></table></figure></li>
<li><p>数据库授权</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">GRANT ALL PRIVILEGES ON nova_api.* TO &#x27;nova&#x27;@&#x27;localhost&#x27; \</span><br><span class="line"> IDENTIFIED BY &#x27;NOVA_DBPASS&#x27;;</span><br><span class="line">GRANT ALL PRIVILEGES ON nova_api.* TO &#x27;nova&#x27;@&#x27;%&#x27; \</span><br><span class="line"> IDENTIFIED BY &#x27;NOVA_DBPASS&#x27;;</span><br><span class="line">GRANT ALL PRIVILEGES ON nova.* TO &#x27;nova&#x27;@&#x27;localhost&#x27; \</span><br><span class="line"> IDENTIFIED BY &#x27;NOVA_DBPASS&#x27;;</span><br><span class="line">GRANT ALL PRIVILEGES ON nova.* TO &#x27;nova&#x27;@&#x27;%&#x27; \</span><br><span class="line"> IDENTIFIED BY &#x27;NOVA_DBPASS&#x27;;</span><br><span class="line">GRANT ALL PRIVILEGES ON nova_cell0.* TO &#x27;nova&#x27;@&#x27;localhost&#x27; \</span><br><span class="line"> IDENTIFIED BY &#x27;NOVA_DBPASS&#x27;;</span><br><span class="line">GRANT ALL PRIVILEGES ON nova_cell0.* TO &#x27;nova&#x27;@&#x27;%&#x27; \</span><br><span class="line"> IDENTIFIED BY &#x27;NOVA_DBPASS&#x27;;</span><br></pre></td></tr></table></figure></li>
<li><p>创建用户</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">openstack user create --domain default --password-prompt nova</span><br></pre></td></tr></table></figure></li>
<li><p>添加admin角色</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">openstack role add --project service --user nova admin</span><br></pre></td></tr></table></figure></li>
<li><p>创建nova服务实体</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">openstack service create --name nova \</span><br><span class="line">  --description &quot;OpenStack Compute&quot; compute</span><br></pre></td></tr></table></figure></li>
<li><p>创建nova服务端点</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">openstack endpoint create --region RegionOne \</span><br><span class="line">  compute public http:&#x2F;&#x2F;controller:8774&#x2F;v2.1</span><br><span class="line">openstack endpoint create --region RegionOne \</span><br><span class="line">  compute internal http:&#x2F;&#x2F;controller:8774&#x2F;v2.1</span><br><span class="line">openstack endpoint create --region RegionOne \</span><br><span class="line">  compute admin http:&#x2F;&#x2F;controller:8774&#x2F;v2.1</span><br><span class="line">  </span><br></pre></td></tr></table></figure>
<h1 id="安装nova服务组件"><a href="#安装nova服务组件" class="headerlink" title="安装nova服务组件"></a>安装nova服务组件</h1></li>
<li><p>安装软件包</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">yum install openstack-nova-api openstack-nova-conductor \</span><br><span class="line">  openstack-nova-novncproxy openstack-nova-scheduler</span><br></pre></td></tr></table></figure></li>
<li><p>修改配置文件</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cat &gt;&gt;/etc/nova/nova.conf&lt;&lt;eof</span><br><span class="line">[DEFAULT]</span><br><span class="line">enabled_apis = osapi_compute,metadata</span><br><span class="line">transport_url = rabbit://openstack:RABBIT_PASS@controller:5672/</span><br><span class="line">my_ip = 10.14.32.11</span><br><span class="line">use_neutron = true</span><br><span class="line">firewall_driver = nova.virt.firewall.NoopFirewallDriver</span><br><span class="line">vif_plugging_is_fatal=false</span><br><span class="line">vif_plugging_timeout=0</span><br><span class="line">allow_resize_to_same_host = True</span><br><span class="line">resume_guests_state_on_host_boot = True</span><br><span class="line">flat_injected             = True</span><br><span class="line">cpu_allocation_ratio=16.0</span><br><span class="line">[api]</span><br><span class="line">auth_strategy = keystone</span><br><span class="line">[api_database]</span><br><span class="line">connection = mysql+pymysql://nova:NOVA_DBPASS@controller/nova_api</span><br><span class="line">[barbican]</span><br><span class="line">[cache]</span><br><span class="line">[cinder]</span><br><span class="line"><span class="meta">#</span><span class="bash">os_region_name = RegionOne</span></span><br><span class="line">[compute]</span><br><span class="line">cpu_dedicated_set=&quot;0-3&quot;</span><br><span class="line">cpu_shared_set=&quot;4-31&quot;</span><br><span class="line">[conductor]</span><br><span class="line">[console]</span><br><span class="line">[consoleauth]</span><br><span class="line">[cors]</span><br><span class="line">[database]</span><br><span class="line">connection = mysql+pymysql://nova:NOVA_DBPASS@controller/nova</span><br><span class="line">[devices]</span><br><span class="line">[ephemeral_storage_encryption]</span><br><span class="line">[filter_scheduler]</span><br><span class="line">[glance]</span><br><span class="line">api_servers = http://controller:9292</span><br><span class="line">[guestfs]</span><br><span class="line">[healthcheck]</span><br><span class="line">[hyperv]</span><br><span class="line">[ironic]</span><br><span class="line">[key_manager]</span><br><span class="line">[keystone]</span><br><span class="line">[keystone_authtoken]</span><br><span class="line">www_authenticate_uri = http://controller:5000/</span><br><span class="line">auth_url = http://controller:5000/</span><br><span class="line">memcached_servers = controller:11211</span><br><span class="line">auth_type = password</span><br><span class="line">project_domain_name = Default</span><br><span class="line">user_domain_name = Default</span><br><span class="line">project_name = service</span><br><span class="line">username = nova</span><br><span class="line">password = NOVA_PASS</span><br><span class="line">[libvirt]</span><br><span class="line">[metrics]</span><br><span class="line">[mks]</span><br><span class="line">[neutron]</span><br><span class="line">[notifications]</span><br><span class="line">[osapi_v21]</span><br><span class="line">[oslo_concurrency]</span><br><span class="line">lock_path = /Data/servers/nova/tmp</span><br><span class="line">[oslo_messaging_amqp]</span><br><span class="line">[oslo_messaging_kafka]</span><br><span class="line">[oslo_messaging_notifications]</span><br><span class="line">[oslo_messaging_rabbit]</span><br><span class="line">[oslo_middleware]</span><br><span class="line">[oslo_policy]</span><br><span class="line">[pci]</span><br><span class="line">[placement]</span><br><span class="line">region_name = RegionOne</span><br><span class="line">project_domain_name = Default</span><br><span class="line">project_name = service</span><br><span class="line">auth_type = password</span><br><span class="line">user_domain_name = Default</span><br><span class="line">auth_url = http://controller:5000/v3</span><br><span class="line">username = placement</span><br><span class="line">password = PLACEMENT_PASS</span><br><span class="line">[powervm]</span><br><span class="line">[privsep]</span><br><span class="line">[profiler]</span><br><span class="line">[quota]</span><br><span class="line">[rdp]</span><br><span class="line">[remote_debug]</span><br><span class="line">[scheduler]</span><br><span class="line">discover_hosts_in_cells_interval = 300</span><br><span class="line"></span><br><span class="line">[serial_console]</span><br><span class="line">[service_user]</span><br><span class="line">[spice]</span><br><span class="line">[upgrade_levels]</span><br><span class="line">[vault]</span><br><span class="line">[vendordata_dynamic_auth]</span><br><span class="line">[vmware]</span><br><span class="line">[vnc]</span><br><span class="line">enabled = true</span><br><span class="line">server_listen = $my_ip</span><br><span class="line">server_proxyclient_address = $my_ip</span><br><span class="line">[workarounds]</span><br><span class="line">[wsgi]</span><br><span class="line">[xenserver]</span><br><span class="line">[xvp]</span><br><span class="line">[zvm]</span><br><span class="line">eof</span><br></pre></td></tr></table></figure></li>
<li><p>同步数据库</p>
<p>导入nova-api数据库</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">su -s &#x2F;bin&#x2F;sh -c &quot;nova-manage api_db sync&quot; nova</span><br></pre></td></tr></table></figure>
<p>注册cell0数据库</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">su -s &#x2F;bin&#x2F;sh -c &quot;nova-manage cell_v2 map_cell0&quot; nova</span><br></pre></td></tr></table></figure>
<p>创建cell1单元格</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># su -s &#x2F;bin&#x2F;sh -c &quot;nova-manage cell_v2 create_cell --name&#x3D;cell1 --verbose&quot; nova</span><br></pre></td></tr></table></figure>
<p>导入nova库</p>
<p>su -s /bin/sh -c “nova-manage db sync” nova</p>
<p>验证nova cell0和cell1是否正确注册</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">su -s &#x2F;bin&#x2F;sh -c &quot;nova-manage cell_v2 list_cells&quot; nova</span><br></pre></td></tr></table></figure></li>
<li><p>验证数据库</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mysql nova_api -e &quot;show tables;&quot;</span><br><span class="line">mysql nova -e &quot;show tables;&quot;</span><br><span class="line">mysql nova_cell0 -e &quot;show tables;&quot;</span><br></pre></td></tr></table></figure>
<h1 id="启动nova相关服务"><a href="#启动nova相关服务" class="headerlink" title="启动nova相关服务"></a>启动nova相关服务</h1></li>
<li><p>配置开机启动</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">systemctl enable \</span><br><span class="line">  openstack-nova-api.service \</span><br><span class="line">  openstack-nova-scheduler.service \</span><br><span class="line">  openstack-nova-conductor.service \</span><br><span class="line">  openstack-nova-novncproxy.service</span><br></pre></td></tr></table></figure></li>
<li><p>启动服务</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">systemctl start \</span><br><span class="line">  openstack-nova-api.service \</span><br><span class="line">  openstack-nova-scheduler.service \</span><br><span class="line">  openstack-nova-conductor.service \</span><br><span class="line">  openstack-nova-novncproxy.service</span><br></pre></td></tr></table></figure></li>
<li><p>检查服务状态</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">openstack compute service list</span><br></pre></td></tr></table></figure>


</li>
</ol>
]]></content>
      <categories>
        <category>openstack</category>
      </categories>
  </entry>
  <entry>
    <title>OpenStack-Train-neutron控制节点安装-(六)</title>
    <url>/2021/02/01/OpenStack-Train-neutron%E6%8E%A7%E5%88%B6%E8%8A%82%E7%82%B9%E5%AE%89%E8%A3%85-%E5%85%AD/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>这个章节主要描述在控制节点如何安装neutron 服务，网络模式采用provider-network, 结合openswtich 、vlan 实现网络功能。</p>
<a id="more"></a>

<h1 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a>创建数据库</h1><ol>
<li><p>创建数据库并授权</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mysql -u root -p</span><br><span class="line">CREATE DATABASE neutron;</span><br><span class="line">GRANT ALL PRIVILEGES ON neutron.* TO &#39;neutron&#39;@&#39;localhost&#39; \</span><br><span class="line">  IDENTIFIED BY &#39;NEUTRON_DBPASS&#39;;</span><br><span class="line">GRANT ALL PRIVILEGES ON neutron.* TO &#39;neutron&#39;@&#39;%&#39; \</span><br><span class="line">  IDENTIFIED BY &#39;NEUTRON_DBPASS&#39;;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li>
<li><p>创建neutron用户及添加角色</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">openstack user create --domain default --password-prompt neutron</span><br><span class="line">openstack role add --project service --user neutron admin</span><br></pre></td></tr></table></figure></li>
<li><p>创建服务和注册api</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">openstack service create --name neutron \</span><br><span class="line">  --description &quot;OpenStack Networking&quot; network</span><br><span class="line">openstack endpoint create --region RegionOne \</span><br><span class="line">  network public http:&#x2F;&#x2F;controller:9696</span><br><span class="line">openstack endpoint create --region RegionOne \</span><br><span class="line">  network internal http:&#x2F;&#x2F;controller:9696</span><br><span class="line">openstack endpoint create --region RegionOne \</span><br><span class="line">  network admin http:&#x2F;&#x2F;controller:9696</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h1 id="安装软件包"><a href="#安装软件包" class="headerlink" title="安装软件包"></a>安装软件包</h1></li>
<li><p>安装neutron相关组件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">yum install openstack-neutron openstack-neutron-ml2 openstack-neutron-openvswitch ebtables -y</span><br></pre></td></tr></table></figure></li>
<li><p>修改相关服务的配置文件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cp &#x2F;etc&#x2F;neutron&#x2F;neutron.conf&#123;,.bak&#125;</span><br><span class="line">grep &#39;^[a-Z\[]&#39; &#x2F;etc&#x2F;neutron&#x2F;neutron.conf.bak &gt;&#x2F;etc&#x2F;neutron&#x2F;neutron.conf</span><br><span class="line"></span><br><span class="line">cat &gt;&gt;&#x2F;etc&#x2F;neutron&#x2F;neutron.conf&lt;&lt;eof</span><br><span class="line">[DEFAULT]</span><br><span class="line">rpc_backend &#x3D; rabbit</span><br><span class="line">core_plugin &#x3D; ml2</span><br><span class="line">service_plugins &#x3D; router </span><br><span class="line">allow_overlapping_ips &#x3D; true</span><br><span class="line">transport_url &#x3D; rabbit:&#x2F;&#x2F;openstack:RABBIT_PASS@controller</span><br><span class="line">auth_strategy &#x3D; keystone</span><br><span class="line">notify_nova_on_port_status_changes &#x3D; true</span><br><span class="line">notify_nova_on_port_data_changes &#x3D; true</span><br><span class="line">[cors]</span><br><span class="line">[database]</span><br><span class="line">connection &#x3D; mysql+pymysql:&#x2F;&#x2F;neutron:NEUTRON_PASS@controller&#x2F;neutron</span><br><span class="line">[keystone_authtoken]</span><br><span class="line">www_authenticate_uri &#x3D; http:&#x2F;&#x2F;controller:5000</span><br><span class="line">auth_url &#x3D; http:&#x2F;&#x2F;controller:5000</span><br><span class="line">memcached_servers &#x3D; controller:11211</span><br><span class="line">auth_type &#x3D; password</span><br><span class="line">project_domain_name &#x3D; default</span><br><span class="line">user_domain_name &#x3D; default</span><br><span class="line">project_name &#x3D; service</span><br><span class="line">username &#x3D; neutron</span><br><span class="line">password &#x3D; NEUTRON_PASS</span><br><span class="line">[nova]</span><br><span class="line">auth_url &#x3D; http:&#x2F;&#x2F;controller:5000</span><br><span class="line">auth_type &#x3D; password</span><br><span class="line">project_domain_name &#x3D; default</span><br><span class="line">user_domain_name &#x3D; default</span><br><span class="line">region_name &#x3D; RegionOne</span><br><span class="line">project_name &#x3D; service</span><br><span class="line">username &#x3D; nova</span><br><span class="line">password &#x3D; NOVA_PASS</span><br><span class="line">[oslo_concurrency]</span><br><span class="line">lock_path &#x3D; &#x2F;Data&#x2F;servers&#x2F;neutron&#x2F;tmp</span><br><span class="line">[oslo_messaging_amqp]</span><br><span class="line">[oslo_messaging_kafka]</span><br><span class="line">[oslo_messaging_notifications]</span><br><span class="line">[oslo_messaging_rabbit]</span><br><span class="line">[oslo_middleware]</span><br><span class="line">[oslo_policy]</span><br><span class="line">[privsep]</span><br><span class="line">[ssl]</span><br><span class="line">eof</span><br></pre></td></tr></table></figure></li>
<li><p>修改ml2 插件</p>
<p>租户网络采用vlan,使用openvswitch作为配置驱动</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cat &gt;&gt;&#x2F;etc&#x2F;neutron&#x2F;plugins&#x2F;ml2&#x2F;ml2_conf.ini&lt;&lt;eof</span><br><span class="line">[DEFAULT]</span><br><span class="line">[ml2]</span><br><span class="line">type_drivers &#x3D; flat,vlan </span><br><span class="line">mechanism_drivers &#x3D; openvswitch</span><br><span class="line">extension_drivers &#x3D; port_security</span><br><span class="line">tenant_network_types &#x3D; vlan</span><br><span class="line">[ml2_type_vlan]</span><br><span class="line">network_vlan_ranges &#x3D; provider</span><br><span class="line">[securitygroup]</span><br><span class="line">#enable_ipset &#x3D; true</span><br><span class="line">enable_security_group &#x3D; True</span><br><span class="line">firewall_driver &#x3D; neutron.agent.linux.iptables_firewall.OVSHybridIptablesFirewallDriver</span><br><span class="line">eof</span><br></pre></td></tr></table></figure></li>
<li><p>配置dhcp agent</p>
<p>vim /etc/neutron/dhcp_agent.ini   主要修改如下内容，其余保持默认即可</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[DEFAULT]</span><br><span class="line">interface_driver &#x3D; openvswitch</span><br><span class="line">enable_isolated_metadata &#x3D; True</span><br><span class="line">force_metadata &#x3D; True</span><br></pre></td></tr></table></figure></li>
<li><p>配置元数据信息</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cp &#x2F;etc&#x2F;neutron&#x2F;metadata_agent.ini&#123;,.bak&#125;</span><br><span class="line">grep &#39;^[a-Z\[]&#39; &#x2F;etc&#x2F;neutron&#x2F;metadata_agent.ini.bak &gt;&#x2F;etc&#x2F;neutron&#x2F;metadata_agent.ini</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>vim /etc/neutron/metadata_agent.ini </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[DEFAULT]</span><br><span class="line">nova_metadata_host &#x3D; controller</span><br><span class="line">metadata_proxy_shared_secret &#x3D; METADATA_SECRET</span><br></pre></td></tr></table></figure>
<ol>
<li>修改控制节点nova配置vim /etc/nova/nova.conf，添加如下内容：</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[neutron]</span><br><span class="line">auth_url &#x3D; http:&#x2F;&#x2F;controller:5000</span><br><span class="line">auth_type &#x3D; password</span><br><span class="line">project_domain_name &#x3D; default</span><br><span class="line">user_domain_name &#x3D; default</span><br><span class="line">region_name &#x3D; RegionOne</span><br><span class="line">project_name &#x3D; service</span><br><span class="line">username &#x3D; neutron</span><br><span class="line">password &#x3D; NEUTRON_PASS</span><br><span class="line">service_metadata_proxy &#x3D; true</span><br><span class="line">metadata_proxy_shared_secret &#x3D; METADATA_SECRET</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h1 id="同步数据库"><a href="#同步数据库" class="headerlink" title="同步数据库"></a>同步数据库</h1></li>
<li><p># 网络服务初始化脚本需要/etc/neutron/plugin.ini指向ML2插件配置文件的符号链接 /etc/neutron/plugins/ml2/ml2_conf.ini。如果此符号链接不存在，请使用以下命令创建它</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ln -s &#x2F;etc&#x2F;neutron&#x2F;plugins&#x2F;ml2&#x2F;ml2_conf.ini &#x2F;etc&#x2F;neutron&#x2F;plugin.ini</span><br></pre></td></tr></table></figure></li>
<li><p>同步数据库表</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">su -s &#x2F;bin&#x2F;sh -c &quot;neutron-db-manage --config-file &#x2F;etc&#x2F;neutron&#x2F;neutron.conf \</span><br><span class="line">  --config-file &#x2F;etc&#x2F;neutron&#x2F;plugins&#x2F;ml2&#x2F;ml2_conf.ini upgrade head&quot; neutron</span><br></pre></td></tr></table></figure></li>
<li><p>查看数据库表</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mysql neutron -e &quot;show tables;&quot;</span><br></pre></td></tr></table></figure>
<h1 id="启动服务"><a href="#启动服务" class="headerlink" title="启动服务"></a>启动服务</h1></li>
<li><p>重新启动nova-api服务</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">systemctl restart openstack-nova-api.service</span><br></pre></td></tr></table></figure></li>
<li><p>启动网络服务，并将其配置为在系统引导时启动。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">systemctl enable neutron-server.service \</span><br><span class="line">   neutron-openvswitch-agent neutron-dhcp-agent.service \</span><br><span class="line">   neutron-metadata-agent.service</span><br><span class="line">systemctl restart neutron-server.service \</span><br><span class="line"> neutron-openvswitch-agent neutron-dhcp-agent.service \</span><br><span class="line">  neutron-metadata-agent.service</span><br><span class="line"></span><br></pre></td></tr></table></figure></li>
<li><p>创建ovs provider 网桥，br-provider,网桥增加物理端口用于租户网络通信 </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ovs-vsctl add-br br-provider</span><br><span class="line">ovs-vsctl add-port br-provider em2</span><br></pre></td></tr></table></figure>









</li>
<li><p>验证</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">neutron agent-list</span><br></pre></td></tr></table></figure>
<p><img src="/images/OpenStack-Train-neutron%E6%8E%A7%E5%88%B6%E8%8A%82%E7%82%B9%E5%AE%89%E8%A3%85-%E5%85%AD/image-20210201151458584.png" alt="image-20210201151458584"></p>
</li>
</ol>
<p>参考文档：</p>
<p><a href="https://docs.openstack.org/neutron/train/admin/deploy-ovs-provider.html">https://docs.openstack.org/neutron/train/admin/deploy-ovs-provider.html</a></p>
]]></content>
      <categories>
        <category>openstack</category>
      </categories>
  </entry>
  <entry>
    <title>OpenStack-Train-horizon安装-(七)</title>
    <url>/2021/02/01/OpenStack-Train-horizon%E5%AE%89%E8%A3%85-%E4%B8%83/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>horizon 提供一个web操作界面openstack的系统。使用Django框架基于openstack api开发,支持session存储在db、memcached, 支持集群</p>
<a id="more"></a>

<h1 id="安装软件包"><a href="#安装软件包" class="headerlink" title="安装软件包"></a>安装软件包</h1><ol>
<li><p>安装dashboard</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">yum install openstack-dashboard -y</span><br></pre></td></tr></table></figure></li>
<li><p>修改配置文件</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cat &gt;&gt;/etc/openstack-dashboard/local_settings&lt;&lt;eof</span><br><span class="line"><span class="meta">#</span><span class="bash"> -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> ----------------------------------------------------------------------</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> NOTE: The default values of the settings are defined <span class="keyword">in</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> openstack_dashboard/defaults.py. Prevously most available settings</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> were listed <span class="keyword">in</span> this example file, but it is no longer <span class="literal">true</span>.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> For available settings, see openstack_dashboard/defaults.py and</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> the horizon setting reference found at</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> https://docs.openstack.org/horizon/latest/configuration/settings.html.</span></span><br><span class="line"><span class="meta">#</span></span><br><span class="line"><span class="bash"><span class="comment"># Django related settings and HORIZON_CONFIG still exist here.</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Keep <span class="keyword">in</span> my mind that they will be revisit <span class="keyword">in</span> upcoming releases.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> ----------------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line">import os</span><br><span class="line"></span><br><span class="line">from django.utils.translation import ugettext_lazy as _</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">from openstack_dashboard.settings import HORIZON_CONFIG</span><br><span class="line"></span><br><span class="line">DEBUG = False</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> This setting controls whether or not compression is enabled. Disabling</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> compression makes Horizon considerably slower, but makes it much easier</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> to debug JS and CSS changes</span></span><br><span class="line"><span class="meta">#</span><span class="bash">COMPRESS_ENABLED = not DEBUG</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> This setting controls whether compression happens on the fly, or offline</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> with `python manage.py compress`</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> See https://django-compressor.readthedocs.io/en/latest/usage/<span class="comment">#offline-compression</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="keyword">for</span> more information</span></span><br><span class="line"><span class="meta">#</span><span class="bash">COMPRESS_OFFLINE = not DEBUG</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> If horizon is running <span class="keyword">in</span> production (DEBUG is False), <span class="built_in">set</span> this</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> with the list of host/domain names that the application can serve.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> For more information see:</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> https://docs.djangoproject.com/en/dev/ref/settings/<span class="comment">#allowed-hosts</span></span></span><br><span class="line">ALLOWED_HOSTS = [&#x27;horizon.example.com&#x27;, &#x27;localhost&#x27;,&#x27;10.14.32.11&#x27;]</span><br><span class="line">WEBROOT = &#x27;/dashboard&#x27;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Set SSL proxy settings:</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Pass this header from the proxy after terminating the SSL,</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> and don<span class="string">&#x27;t forget to strip it from the client&#x27;</span>s request.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> For more information see:</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> https://docs.djangoproject.com/en/dev/ref/settings/<span class="comment">#secure-proxy-ssl-header</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash">SECURE_PROXY_SSL_HEADER = (<span class="string">&#x27;HTTP_X_FORWARDED_PROTO&#x27;</span>, <span class="string">&#x27;https&#x27;</span>)</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> If Horizon is being served through SSL, <span class="keyword">then</span> uncomment the following two</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> settings to better secure the cookies from security exploits</span></span><br><span class="line"><span class="meta">#</span><span class="bash">CSRF_COOKIE_SECURE = True</span></span><br><span class="line"><span class="meta">#</span><span class="bash">SESSION_COOKIE_SECURE = True</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> If provided, a <span class="string">&quot;Report Bug&quot;</span> link will be displayed <span class="keyword">in</span> the site header</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">which</span> links to the value of this setting (ideally a URL containing</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> information on how to report issues).</span></span><br><span class="line"><span class="meta">#</span><span class="bash">HORIZON_CONFIG[<span class="string">&quot;bug_url&quot;</span>] = <span class="string">&quot;http://bug-report.example.com&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Show backdrop element outside the modal, <span class="keyword">do</span> not close the modal</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> after clicking on backdrop.</span></span><br><span class="line"><span class="meta">#</span><span class="bash">HORIZON_CONFIG[<span class="string">&quot;modal_backdrop&quot;</span>] = <span class="string">&quot;static&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Specify a regular expression to validate user passwords.</span></span><br><span class="line"><span class="meta">#</span><span class="bash">HORIZON_CONFIG[<span class="string">&quot;password_validator&quot;</span>] = &#123;</span></span><br><span class="line"><span class="meta">#</span><span class="bash">    <span class="string">&quot;regex&quot;</span>: <span class="string">&#x27;.*&#x27;</span>,</span></span><br><span class="line"><span class="meta">#</span><span class="bash">    <span class="string">&quot;help_text&quot;</span>: _(<span class="string">&quot;Your password does not meet the requirements.&quot;</span>),</span></span><br><span class="line"><span class="meta">#</span><span class="bash">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Turn off browser autocompletion <span class="keyword">for</span> forms including the login form and</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> the database creation workflow <span class="keyword">if</span> so desired.</span></span><br><span class="line"><span class="meta">#</span><span class="bash">HORIZON_CONFIG[<span class="string">&quot;password_autocomplete&quot;</span>] = <span class="string">&quot;off&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Setting this to True will <span class="built_in">disable</span> the reveal button <span class="keyword">for</span> password fields,</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> including on the login form.</span></span><br><span class="line"><span class="meta">#</span><span class="bash">HORIZON_CONFIG[<span class="string">&quot;disable_password_reveal&quot;</span>] = False</span></span><br><span class="line"></span><br><span class="line">LOCAL_PATH = &#x27;/tmp&#x27;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Set custom secret key:</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> You can either <span class="built_in">set</span> it to a specific value or you can <span class="built_in">let</span> horizon generate a</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> default secret key that is unique on this machine, e.i. regardless of the</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> amount of Python WSGI workers (<span class="keyword">if</span> used behind Apache+mod_wsgi): However,</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> there may be situations <span class="built_in">where</span> you would want to <span class="built_in">set</span> this explicitly, e.g.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> when multiple dashboard instances are distributed on different machines</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> (usually behind a load-balancer). Either you have to make sure that a session</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> gets all requests routed to the same dashboard instance or you <span class="built_in">set</span> the same</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> SECRET_KEY <span class="keyword">for</span> all of them.</span></span><br><span class="line">SECRET_KEY=&#x27;f567f3e8b7772f9a77da&#x27;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> We recommend you use memcached <span class="keyword">for</span> development; otherwise after every reload</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> of the django development server, you will have to login again. To use</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> memcached <span class="built_in">set</span> CACHES to something like below.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> For more information, see</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> https://docs.djangoproject.com/en/1.11/topics/http/sessions/.</span></span><br><span class="line"><span class="meta">#</span><span class="bash">CACHES = &#123;</span></span><br><span class="line"><span class="meta">#</span><span class="bash">    <span class="string">&#x27;default&#x27;</span>: &#123;</span></span><br><span class="line"><span class="meta">#</span><span class="bash">        <span class="string">&#x27;BACKEND&#x27;</span>: <span class="string">&#x27;django.core.cache.backends.memcached.MemcachedCache&#x27;</span>,</span></span><br><span class="line"><span class="meta">#</span><span class="bash">        <span class="string">&#x27;LOCATION&#x27;</span>: <span class="string">&#x27;127.0.0.1:11211&#x27;</span>,</span></span><br><span class="line"><span class="meta">#</span><span class="bash">    &#125;,</span></span><br><span class="line"><span class="meta">#</span></span><br><span class="line"><span class="bash"><span class="comment">#&#125;</span></span></span><br><span class="line">CACHES = &#123;</span><br><span class="line">    &#x27;default&#x27;: &#123;</span><br><span class="line">         &#x27;BACKEND&#x27;: &#x27;django.core.cache.backends.memcached.MemcachedCache&#x27;,</span><br><span class="line">         &#x27;LOCATION&#x27;: &#x27;controller:11211&#x27;,</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> If you use ``tox -e runserver`` <span class="keyword">for</span> developments,<span class="keyword">then</span> configure</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> SESSION_ENGINE to django.contrib.sessions.backends.signed_cookies</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> as shown below:</span></span><br><span class="line"><span class="meta">#</span><span class="bash">SESSION_ENGINE = <span class="string">&#x27;django.contrib.sessions.backends.signed_cookies&#x27;</span></span></span><br><span class="line">SESSION_ENGINE = &#x27;django.contrib.sessions.backends.cache&#x27;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Send email to the console by default</span></span><br><span class="line">EMAIL_BACKEND = &#x27;django.core.mail.backends.console.EmailBackend&#x27;</span><br><span class="line"><span class="meta">#</span><span class="bash"> Or send them to /dev/null</span></span><br><span class="line"><span class="meta">#</span><span class="bash">EMAIL_BACKEND = <span class="string">&#x27;django.core.mail.backends.dummy.EmailBackend&#x27;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Configure these <span class="keyword">for</span> your outgoing email host</span></span><br><span class="line"><span class="meta">#</span><span class="bash">EMAIL_HOST = <span class="string">&#x27;smtp.my-company.com&#x27;</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash">EMAIL_PORT = 25</span></span><br><span class="line"><span class="meta">#</span><span class="bash">EMAIL_HOST_USER = <span class="string">&#x27;djangomail&#x27;</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash">EMAIL_HOST_PASSWORD = <span class="string">&#x27;top-secret!&#x27;</span></span></span><br><span class="line"></span><br><span class="line">OPENSTACK_HOST = &quot;controller&quot;</span><br><span class="line">PENSTACK_KEYSTONE_URL = &quot;http://%s:5000/v3&quot; % OPENSTACK_HOST</span><br><span class="line">OPENSTACK_KEYSTONE_MULTIDOMAIN_SUPPORT = True</span><br><span class="line"></span><br><span class="line">OPENSTACK_API_VERSIONS = &#123;</span><br><span class="line">    &quot;identity&quot;: 3,</span><br><span class="line">    &quot;image&quot;: 2,</span><br><span class="line">    &quot;volume&quot;: 3,</span><br><span class="line">&#125;</span><br><span class="line">OPENSTACK_KEYSTONE_DEFAULT_DOMAIN = &quot;Default&quot;</span><br><span class="line">OPENSTACK_KEYSTONE_DEFAULT_ROLE = &quot;user&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> The OPENSTACK_NEUTRON_NETWORK settings can be used to <span class="built_in">enable</span> optional</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> services provided by neutron. Options currently available are load</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> balancer service, security groups, quotas, VPN service.</span></span><br><span class="line">OPENSTACK_NEUTRON_NETWORK = &#123;</span><br><span class="line">    &#x27;enable_router&#x27;: False,</span><br><span class="line">    &#x27;enable_quotas&#x27;: False,</span><br><span class="line">    &#x27;enable_distributed_router&#x27;: False,</span><br><span class="line">    &#x27;enable_ha_router&#x27;: False,</span><br><span class="line">    &#x27;enable_lb&#x27;: False,</span><br><span class="line">    &#x27;enable_firewall&#x27;: False,</span><br><span class="line">    &#x27;enable_vpn&#x27;: False,</span><br><span class="line">    &#x27;enable_fip_topology_check&#x27;: False,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> The timezone of the server. This should correspond with the timezone</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> of your entire OpenStack installation, and hopefully be <span class="keyword">in</span> UTC.</span></span><br><span class="line">TIME_ZONE = &quot;Asia/Shanghai&quot;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Change this patch to the appropriate list of tuples containing</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> a key, label and static directory containing two files:</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> _variables.scss and _styles.scss</span></span><br><span class="line"><span class="meta">#</span><span class="bash">AVAILABLE_THEMES = [</span></span><br><span class="line"><span class="meta">#</span><span class="bash">    (<span class="string">&#x27;default&#x27;</span>, <span class="string">&#x27;Default&#x27;</span>, <span class="string">&#x27;themes/default&#x27;</span>),</span></span><br><span class="line"><span class="meta">#</span><span class="bash">    (<span class="string">&#x27;material&#x27;</span>, <span class="string">&#x27;Material&#x27;</span>, <span class="string">&#x27;themes/material&#x27;</span>),</span></span><br><span class="line"><span class="meta">#</span><span class="bash">    (<span class="string">&#x27;example&#x27;</span>, <span class="string">&#x27;Example&#x27;</span>, <span class="string">&#x27;themes/example&#x27;</span>),</span></span><br><span class="line"><span class="meta">#</span><span class="bash">]</span></span><br><span class="line"></span><br><span class="line">LOGGING = &#123;</span><br><span class="line">    &#x27;version&#x27;: 1,</span><br><span class="line">    # When set to True this will disable all logging except</span><br><span class="line">    # for loggers specified in this configuration dictionary. Note that</span><br><span class="line">    # if nothing is specified here and disable_existing_loggers is True,</span><br><span class="line">    # django.db.backends will still log unless it is disabled explicitly.</span><br><span class="line">    &#x27;disable_existing_loggers&#x27;: False,</span><br><span class="line">    # If apache2 mod_wsgi is used to deploy OpenStack dashboard</span><br><span class="line">    # timestamp is output by mod_wsgi. If WSGI framework you use does not</span><br><span class="line">    # output timestamp for logging, add %(asctime)s in the following</span><br><span class="line">    # format definitions.</span><br><span class="line">    &#x27;formatters&#x27;: &#123;</span><br><span class="line">        &#x27;console&#x27;: &#123;</span><br><span class="line">            &#x27;format&#x27;: &#x27;%(levelname)s %(name)s %(message)s&#x27;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#x27;operation&#x27;: &#123;</span><br><span class="line">            # The format of &quot;%(message)s&quot; is defined by</span><br><span class="line">            # OPERATION_LOG_OPTIONS[&#x27;format&#x27;]</span><br><span class="line">            &#x27;format&#x27;: &#x27;%(message)s&#x27;</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#x27;handlers&#x27;: &#123;</span><br><span class="line">        &#x27;null&#x27;: &#123;</span><br><span class="line">            &#x27;level&#x27;: &#x27;DEBUG&#x27;,</span><br><span class="line">            &#x27;class&#x27;: &#x27;logging.NullHandler&#x27;,</span><br><span class="line">        &#125;,</span><br><span class="line">        &#x27;console&#x27;: &#123;</span><br><span class="line">            # Set the level to &quot;DEBUG&quot; for verbose output logging.</span><br><span class="line">            &#x27;level&#x27;: &#x27;DEBUG&#x27; if DEBUG else &#x27;INFO&#x27;,</span><br><span class="line">            &#x27;class&#x27;: &#x27;logging.StreamHandler&#x27;,</span><br><span class="line">            &#x27;formatter&#x27;: &#x27;console&#x27;,</span><br><span class="line">        &#125;,</span><br><span class="line">        &#x27;operation&#x27;: &#123;</span><br><span class="line">            &#x27;level&#x27;: &#x27;INFO&#x27;,</span><br><span class="line">            &#x27;class&#x27;: &#x27;logging.StreamHandler&#x27;,</span><br><span class="line">            &#x27;formatter&#x27;: &#x27;operation&#x27;,</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#x27;loggers&#x27;: &#123;</span><br><span class="line">        &#x27;horizon&#x27;: &#123;</span><br><span class="line">            &#x27;handlers&#x27;: [&#x27;console&#x27;],</span><br><span class="line">            &#x27;level&#x27;: &#x27;DEBUG&#x27;,</span><br><span class="line">            &#x27;propagate&#x27;: False,</span><br><span class="line">        &#125;,</span><br><span class="line">        &#x27;horizon.operation_log&#x27;: &#123;</span><br><span class="line">            &#x27;handlers&#x27;: [&#x27;operation&#x27;],</span><br><span class="line">            &#x27;level&#x27;: &#x27;INFO&#x27;,</span><br><span class="line">            &#x27;propagate&#x27;: False,</span><br><span class="line">        &#125;,</span><br><span class="line">        &#x27;openstack_dashboard&#x27;: &#123;</span><br><span class="line">            &#x27;handlers&#x27;: [&#x27;console&#x27;],</span><br><span class="line">            &#x27;level&#x27;: &#x27;DEBUG&#x27;,</span><br><span class="line">            &#x27;propagate&#x27;: False,</span><br><span class="line">        &#125;,</span><br><span class="line">        &#x27;novaclient&#x27;: &#123;</span><br><span class="line">            &#x27;handlers&#x27;: [&#x27;console&#x27;],</span><br><span class="line">            &#x27;level&#x27;: &#x27;DEBUG&#x27;,</span><br><span class="line">            &#x27;propagate&#x27;: False,</span><br><span class="line">        &#125;,</span><br><span class="line">        &#x27;cinderclient&#x27;: &#123;</span><br><span class="line">            &#x27;handlers&#x27;: [&#x27;console&#x27;],</span><br><span class="line">            &#x27;level&#x27;: &#x27;DEBUG&#x27;,</span><br><span class="line">            &#x27;propagate&#x27;: False,</span><br><span class="line">        &#125;,</span><br><span class="line">        &#x27;keystoneauth&#x27;: &#123;</span><br><span class="line">            &#x27;handlers&#x27;: [&#x27;console&#x27;],</span><br><span class="line">            &#x27;level&#x27;: &#x27;DEBUG&#x27;,</span><br><span class="line">            &#x27;propagate&#x27;: False,</span><br><span class="line">        &#125;,</span><br><span class="line">        &#x27;keystoneclient&#x27;: &#123;</span><br><span class="line">            &#x27;handlers&#x27;: [&#x27;console&#x27;],</span><br><span class="line">            &#x27;level&#x27;: &#x27;DEBUG&#x27;,</span><br><span class="line">            &#x27;propagate&#x27;: False,</span><br><span class="line">        &#125;,</span><br><span class="line">        &#x27;glanceclient&#x27;: &#123;</span><br><span class="line">            &#x27;handlers&#x27;: [&#x27;console&#x27;],</span><br><span class="line">            &#x27;level&#x27;: &#x27;DEBUG&#x27;,</span><br><span class="line">            &#x27;propagate&#x27;: False,</span><br><span class="line">        &#125;,</span><br><span class="line">        &#x27;neutronclient&#x27;: &#123;</span><br><span class="line">            &#x27;handlers&#x27;: [&#x27;console&#x27;],</span><br><span class="line">            &#x27;level&#x27;: &#x27;DEBUG&#x27;,</span><br><span class="line">            &#x27;propagate&#x27;: False,</span><br><span class="line">        &#125;,</span><br><span class="line">        &#x27;swiftclient&#x27;: &#123;</span><br><span class="line">            &#x27;handlers&#x27;: [&#x27;console&#x27;],</span><br><span class="line">            &#x27;level&#x27;: &#x27;DEBUG&#x27;,</span><br><span class="line">            &#x27;propagate&#x27;: False,</span><br><span class="line">        &#125;,</span><br><span class="line">        &#x27;oslo_policy&#x27;: &#123;</span><br><span class="line">            &#x27;handlers&#x27;: [&#x27;console&#x27;],</span><br><span class="line">            &#x27;level&#x27;: &#x27;DEBUG&#x27;,</span><br><span class="line">            &#x27;propagate&#x27;: False,</span><br><span class="line">        &#125;,</span><br><span class="line">        &#x27;openstack_auth&#x27;: &#123;</span><br><span class="line">            &#x27;handlers&#x27;: [&#x27;console&#x27;],</span><br><span class="line">            &#x27;level&#x27;: &#x27;DEBUG&#x27;,</span><br><span class="line">            &#x27;propagate&#x27;: False,</span><br><span class="line">        &#125;,</span><br><span class="line">        &#x27;django&#x27;: &#123;</span><br><span class="line">            &#x27;handlers&#x27;: [&#x27;console&#x27;],</span><br><span class="line">            &#x27;level&#x27;: &#x27;DEBUG&#x27;,</span><br><span class="line">            &#x27;propagate&#x27;: False,</span><br><span class="line">        &#125;,</span><br><span class="line">        # Logging from django.db.backends is VERY verbose, send to null</span><br><span class="line">        # by default.</span><br><span class="line">        &#x27;django.db.backends&#x27;: &#123;</span><br><span class="line">            &#x27;handlers&#x27;: [&#x27;null&#x27;],</span><br><span class="line">            &#x27;propagate&#x27;: False,</span><br><span class="line">        &#125;,</span><br><span class="line">        &#x27;requests&#x27;: &#123;</span><br><span class="line">            &#x27;handlers&#x27;: [&#x27;null&#x27;],</span><br><span class="line">            &#x27;propagate&#x27;: False,</span><br><span class="line">        &#125;,</span><br><span class="line">        &#x27;urllib3&#x27;: &#123;</span><br><span class="line">            &#x27;handlers&#x27;: [&#x27;null&#x27;],</span><br><span class="line">            &#x27;propagate&#x27;: False,</span><br><span class="line">        &#125;,</span><br><span class="line">        &#x27;chardet.charsetprober&#x27;: &#123;</span><br><span class="line">            &#x27;handlers&#x27;: [&#x27;null&#x27;],</span><br><span class="line">            &#x27;propagate&#x27;: False,</span><br><span class="line">        &#125;,</span><br><span class="line">        &#x27;iso8601&#x27;: &#123;</span><br><span class="line">            &#x27;handlers&#x27;: [&#x27;null&#x27;],</span><br><span class="line">            &#x27;propagate&#x27;: False,</span><br><span class="line">        &#125;,</span><br><span class="line">        &#x27;scss&#x27;: &#123;</span><br><span class="line">            &#x27;handlers&#x27;: [&#x27;null&#x27;],</span><br><span class="line">            &#x27;propagate&#x27;: False,</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="string">&#x27;direction&#x27;</span> should not be specified <span class="keyword">for</span> all_tcp/udp/icmp.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> It is specified <span class="keyword">in</span> the form.</span></span><br><span class="line">SECURITY_GROUP_RULES = &#123;</span><br><span class="line">    &#x27;all_tcp&#x27;: &#123;</span><br><span class="line">        &#x27;name&#x27;: _(&#x27;All TCP&#x27;),</span><br><span class="line">        &#x27;ip_protocol&#x27;: &#x27;tcp&#x27;,</span><br><span class="line">        &#x27;from_port&#x27;: &#x27;1&#x27;,</span><br><span class="line">        &#x27;to_port&#x27;: &#x27;65535&#x27;,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#x27;all_udp&#x27;: &#123;</span><br><span class="line">        &#x27;name&#x27;: _(&#x27;All UDP&#x27;),</span><br><span class="line">        &#x27;ip_protocol&#x27;: &#x27;udp&#x27;,</span><br><span class="line">        &#x27;from_port&#x27;: &#x27;1&#x27;,</span><br><span class="line">        &#x27;to_port&#x27;: &#x27;65535&#x27;,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#x27;all_icmp&#x27;: &#123;</span><br><span class="line">        &#x27;name&#x27;: _(&#x27;All ICMP&#x27;),</span><br><span class="line">        &#x27;ip_protocol&#x27;: &#x27;icmp&#x27;,</span><br><span class="line">        &#x27;from_port&#x27;: &#x27;-1&#x27;,</span><br><span class="line">        &#x27;to_port&#x27;: &#x27;-1&#x27;,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#x27;ssh&#x27;: &#123;</span><br><span class="line">        &#x27;name&#x27;: &#x27;SSH&#x27;,</span><br><span class="line">        &#x27;ip_protocol&#x27;: &#x27;tcp&#x27;,</span><br><span class="line">        &#x27;from_port&#x27;: &#x27;22&#x27;,</span><br><span class="line">        &#x27;to_port&#x27;: &#x27;22&#x27;,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#x27;smtp&#x27;: &#123;</span><br><span class="line">        &#x27;name&#x27;: &#x27;SMTP&#x27;,</span><br><span class="line">        &#x27;ip_protocol&#x27;: &#x27;tcp&#x27;,</span><br><span class="line">        &#x27;from_port&#x27;: &#x27;25&#x27;,</span><br><span class="line">        &#x27;to_port&#x27;: &#x27;25&#x27;,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#x27;dns&#x27;: &#123;</span><br><span class="line">        &#x27;name&#x27;: &#x27;DNS&#x27;,</span><br><span class="line">        &#x27;ip_protocol&#x27;: &#x27;tcp&#x27;,</span><br><span class="line">        &#x27;from_port&#x27;: &#x27;53&#x27;,</span><br><span class="line">        &#x27;to_port&#x27;: &#x27;53&#x27;,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#x27;http&#x27;: &#123;</span><br><span class="line">        &#x27;name&#x27;: &#x27;HTTP&#x27;,</span><br><span class="line">        &#x27;ip_protocol&#x27;: &#x27;tcp&#x27;,</span><br><span class="line">        &#x27;from_port&#x27;: &#x27;80&#x27;,</span><br><span class="line">        &#x27;to_port&#x27;: &#x27;80&#x27;,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#x27;pop3&#x27;: &#123;</span><br><span class="line">        &#x27;name&#x27;: &#x27;POP3&#x27;,</span><br><span class="line">        &#x27;ip_protocol&#x27;: &#x27;tcp&#x27;,</span><br><span class="line">        &#x27;from_port&#x27;: &#x27;110&#x27;,</span><br><span class="line">        &#x27;to_port&#x27;: &#x27;110&#x27;,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#x27;imap&#x27;: &#123;</span><br><span class="line">        &#x27;name&#x27;: &#x27;IMAP&#x27;,</span><br><span class="line">        &#x27;ip_protocol&#x27;: &#x27;tcp&#x27;,</span><br><span class="line">        &#x27;from_port&#x27;: &#x27;143&#x27;,</span><br><span class="line">        &#x27;to_port&#x27;: &#x27;143&#x27;,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#x27;ldap&#x27;: &#123;</span><br><span class="line">        &#x27;name&#x27;: &#x27;LDAP&#x27;,</span><br><span class="line">        &#x27;ip_protocol&#x27;: &#x27;tcp&#x27;,</span><br><span class="line">        &#x27;from_port&#x27;: &#x27;389&#x27;,</span><br><span class="line">        &#x27;to_port&#x27;: &#x27;389&#x27;,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#x27;https&#x27;: &#123;</span><br><span class="line">        &#x27;name&#x27;: &#x27;HTTPS&#x27;,</span><br><span class="line">        &#x27;ip_protocol&#x27;: &#x27;tcp&#x27;,</span><br><span class="line">        &#x27;from_port&#x27;: &#x27;443&#x27;,</span><br><span class="line">        &#x27;to_port&#x27;: &#x27;443&#x27;,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#x27;smtps&#x27;: &#123;</span><br><span class="line">        &#x27;name&#x27;: &#x27;SMTPS&#x27;,</span><br><span class="line">        &#x27;ip_protocol&#x27;: &#x27;tcp&#x27;,</span><br><span class="line">        &#x27;from_port&#x27;: &#x27;465&#x27;,</span><br><span class="line">        &#x27;to_port&#x27;: &#x27;465&#x27;,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#x27;imaps&#x27;: &#123;</span><br><span class="line">        &#x27;name&#x27;: &#x27;IMAPS&#x27;,</span><br><span class="line">        &#x27;ip_protocol&#x27;: &#x27;tcp&#x27;,</span><br><span class="line">        &#x27;from_port&#x27;: &#x27;993&#x27;,</span><br><span class="line">        &#x27;to_port&#x27;: &#x27;993&#x27;,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#x27;pop3s&#x27;: &#123;</span><br><span class="line">        &#x27;name&#x27;: &#x27;POP3S&#x27;,</span><br><span class="line">        &#x27;ip_protocol&#x27;: &#x27;tcp&#x27;,</span><br><span class="line">        &#x27;from_port&#x27;: &#x27;995&#x27;,</span><br><span class="line">        &#x27;to_port&#x27;: &#x27;995&#x27;,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#x27;ms_sql&#x27;: &#123;</span><br><span class="line">        &#x27;name&#x27;: &#x27;MS SQL&#x27;,</span><br><span class="line">        &#x27;ip_protocol&#x27;: &#x27;tcp&#x27;,</span><br><span class="line">        &#x27;from_port&#x27;: &#x27;1433&#x27;,</span><br><span class="line">        &#x27;to_port&#x27;: &#x27;1433&#x27;,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#x27;mysql&#x27;: &#123;</span><br><span class="line">        &#x27;name&#x27;: &#x27;MYSQL&#x27;,</span><br><span class="line">        &#x27;ip_protocol&#x27;: &#x27;tcp&#x27;,</span><br><span class="line">        &#x27;from_port&#x27;: &#x27;3306&#x27;,</span><br><span class="line">        &#x27;to_port&#x27;: &#x27;3306&#x27;,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#x27;rdp&#x27;: &#123;</span><br><span class="line">        &#x27;name&#x27;: &#x27;RDP&#x27;,</span><br><span class="line">        &#x27;ip_protocol&#x27;: &#x27;tcp&#x27;,</span><br><span class="line">        &#x27;from_port&#x27;: &#x27;3389&#x27;,</span><br><span class="line">        &#x27;to_port&#x27;: &#x27;3389&#x27;,</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Help URL can be made available <span class="keyword">for</span> the client. To provide a <span class="built_in">help</span> URL, edit the</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> following attribute to the URL of your choice.</span></span><br><span class="line"><span class="meta">#</span><span class="bash">HORIZON_CONFIG[<span class="string">&quot;help_url&quot;</span>] = <span class="string">&quot;http://openstack.mycompany.org&quot;</span></span></span><br><span class="line">eof</span><br></pre></td></tr></table></figure>
<p>vim /etc/httpd/conf.d/openstack-dashboard.conf 增加如下代码</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">WSGIApplicationGroup %&#123;GLOBAL</span><br></pre></td></tr></table></figure></li>
<li><p>启动服务</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">systemctl restart httpd.service memcached.service</span><br></pre></td></tr></table></figure>
<h1 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h1></li>
</ol>
<p><a href="http://10.14.32.11/dashboard">http://10.14.32.11/dashboard</a>   账号admin  密码  ADMIN_PASS</p>
<p>参考文档：</p>
<p><a href="https://docs.openstack.org/horizon/train/install/install-rdo.html">https://docs.openstack.org/horizon/train/install/install-rdo.html</a></p>
<p><a href="http://poweroff.cn/openstack/361.html">http://poweroff.cn/openstack/361.html</a></p>
]]></content>
      <categories>
        <category>openstack</category>
      </categories>
  </entry>
  <entry>
    <title>OpenStack-Train-nova计算节点安装-(八)</title>
    <url>/2021/02/01/OpenStack-Train-nova%E8%AE%A1%E7%AE%97%E8%8A%82%E7%82%B9%E5%AE%89%E8%A3%85-%E5%85%AB/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>nova-compute一般运行在计算节点，通过messages queue接收并管理VM的生命周期,nova-compute调用libvirtd来管理虚拟机,网络组件openstack-neutron-openvswitch一并安装完。</p>
<a id="more"></a>

<h1 id="条件"><a href="#条件" class="headerlink" title="条件"></a>条件</h1><p>检查计算节点是否支持虚拟化,确定您的计算节点是否支持虚拟机的硬件加速</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">egrep -c &#39;(vmx|svm)&#39; &#x2F;proc&#x2F;cpuinfo</span><br></pre></td></tr></table></figure>
<h1 id="安装nova-compute-组件"><a href="#安装nova-compute-组件" class="headerlink" title="安装nova-compute 组件"></a>安装nova-compute 组件</h1><ol>
<li><p>安装软件包</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">yum install openstack-nova-compute  openstack-neutron-openvswitch -y</span><br></pre></td></tr></table></figure></li>
<li><p>修改配置文件</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cp /etc/nova/nova.conf&#123;,.bak&#125;</span><br><span class="line">grep &#x27;^[a-Z\[]&#x27; /etc/nova/nova.conf.bak &gt;/etc/nova/nova.conf</span><br><span class="line"></span><br><span class="line">cat &gt;&gt;/etc/nova/nova.conf&lt;&lt;eof</span><br><span class="line">[DEFAULT]</span><br><span class="line">state_path                = /Data/servers/nova</span><br><span class="line">instances_path            = /Data/servers/nova/instances</span><br><span class="line">enabled_apis = osapi_compute,metadata</span><br><span class="line">transport_url = rabbit://openstack:RABBIT_PASS@controller</span><br><span class="line">my_ip = 10.14.32.12</span><br><span class="line">use_neutron = true</span><br><span class="line">firewall_driver = nova.virt.firewall.NoopFirewallDriver</span><br><span class="line">vif_plugging_is_fatal=false</span><br><span class="line">vif_plugging_timeout=0</span><br><span class="line">allow_resize_to_same_host = True</span><br><span class="line">resume_guests_state_on_host_boot = True</span><br><span class="line">force_config_drive=true</span><br><span class="line">flat_injected = True</span><br><span class="line">ram_allocation_ratio = 1.0</span><br><span class="line">cpu_allocation_ratio = 16.0</span><br><span class="line">disk_allocation_ratio = 1.5</span><br><span class="line">compute_driver=libvirt.LibvirtDriver</span><br><span class="line">[api]</span><br><span class="line">auth_strategy = keystone</span><br><span class="line">[api_database]</span><br><span class="line">[barbican]</span><br><span class="line">[cache]</span><br><span class="line">[cinder]</span><br><span class="line">[compute]</span><br><span class="line">cpu_dedicated_set=&quot;0-3&quot;</span><br><span class="line">cpu_shared_set=&quot;4-31&quot;</span><br><span class="line">[conductor]</span><br><span class="line">[console]</span><br><span class="line">[consoleauth]</span><br><span class="line">[cors]</span><br><span class="line">[database]</span><br><span class="line">[devices]</span><br><span class="line">[ephemeral_storage_encryption]</span><br><span class="line">[filter_scheduler]</span><br><span class="line">[glance]</span><br><span class="line">api_servers = http://controller:9292</span><br><span class="line">[guestfs]</span><br><span class="line">[healthcheck]</span><br><span class="line">[hyperv]</span><br><span class="line">[ironic]</span><br><span class="line">[key_manager]</span><br><span class="line">[keystone]</span><br><span class="line">[keystone_authtoken]</span><br><span class="line">www_authenticate_uri = http://controller:5000/</span><br><span class="line">auth_url = http://controller:5000/</span><br><span class="line">memcached_servers = controller:11211</span><br><span class="line">auth_type = password</span><br><span class="line">project_domain_name = Default</span><br><span class="line">user_domain_name = Default</span><br><span class="line">project_name = service</span><br><span class="line">username = nova</span><br><span class="line">password = NOVA_PASS</span><br><span class="line">[libvirt]</span><br><span class="line">virt_type = kvm</span><br><span class="line">[metrics]</span><br><span class="line">[mks]</span><br><span class="line">[neutron]</span><br><span class="line">auth_url = http://controller:5000</span><br><span class="line">auth_type = password</span><br><span class="line">project_domain_name = default</span><br><span class="line">user_domain_name = default</span><br><span class="line">region_name = RegionOne</span><br><span class="line">project_name = service</span><br><span class="line">username = neutron</span><br><span class="line">password = NEUTRON_PASS</span><br><span class="line">[notifications]</span><br><span class="line">[osapi_v21]</span><br><span class="line">[oslo_concurrency]</span><br><span class="line">lock_path = /Data/servers/nova/tmp</span><br><span class="line">[oslo_messaging_amqp]</span><br><span class="line">[oslo_messaging_kafka]</span><br><span class="line">[oslo_messaging_notifications]</span><br><span class="line">[oslo_messaging_rabbit]</span><br><span class="line">[oslo_middleware]</span><br><span class="line">[oslo_policy]</span><br><span class="line">[pci]</span><br><span class="line">[placement]</span><br><span class="line">region_name = RegionOne</span><br><span class="line">project_domain_name = Default</span><br><span class="line">project_name = service</span><br><span class="line">auth_type = password</span><br><span class="line">user_domain_name = Default</span><br><span class="line">auth_url = http://controller:5000/v3</span><br><span class="line">username = placement</span><br><span class="line">password = PLACEMENT_PASS</span><br><span class="line">[powervm]</span><br><span class="line">[privsep]</span><br><span class="line">[profiler]</span><br><span class="line">[quota]</span><br><span class="line">[rdp]</span><br><span class="line">[remote_debug]</span><br><span class="line">[scheduler]</span><br><span class="line"><span class="meta">#</span><span class="bash">driver = filter_scheduler</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">[filter_scheduler]</span></span><br><span class="line"><span class="meta">#</span><span class="bash">available_filters = nova.scheduler.filters.all_filters</span></span><br><span class="line"><span class="meta">#</span><span class="bash">enabled_filters = AvailabilityZoneFilter, ComputeFilter, ComputeCapabilitiesFilter, ImagePropertiesFilter, ServerGroupAntiAffinityFilter, ServerGroupAffinityFilter</span></span><br><span class="line">[serial_console]</span><br><span class="line">[service_user]</span><br><span class="line">[spice]</span><br><span class="line">[upgrade_levels]</span><br><span class="line">[vault]</span><br><span class="line">[vendordata_dynamic_auth]</span><br><span class="line">[vmware]</span><br><span class="line">[vnc]</span><br><span class="line">enabled = true</span><br><span class="line">server_listen = 0.0.0.0</span><br><span class="line">server_proxyclient_address = $my_ip</span><br><span class="line">novncproxy_base_url = http://10.14.32.11:6080/vnc_auto.html</span><br><span class="line">[workarounds]</span><br><span class="line">[wsgi]</span><br><span class="line">[xenserver]</span><br><span class="line">[xvp]</span><br><span class="line">[zvm]</span><br><span class="line">eof</span><br></pre></td></tr></table></figure>
<ol start="3">
<li><p>修改openvwitch-agent 配置</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cat &gt;&gt;&#x2F;etc&#x2F;neutron&#x2F;plugins&#x2F;ml2&#x2F;openvswitch_agent.ini&lt;&lt;eof</span><br><span class="line">[DEFAULT]</span><br><span class="line">[ovs]</span><br><span class="line">integration_bridge &#x3D; br-int</span><br><span class="line">bridge_mappings&#x3D;provider:br-provider</span><br><span class="line">enable_tunneling&#x3D;False</span><br><span class="line">[securitygroup]</span><br><span class="line">firewall_driver &#x3D; neutron.agent.linux.iptables_firewall.OVSHybridIptablesFirewallDriver</span><br><span class="line">oef</span><br></pre></td></tr></table></figure></li>
<li><p>配置ovs provider 网桥,br-provider、添加物理端口到网桥</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ovs-vsctl add-br br-provider</span><br><span class="line">ovs-vsctl add-port br-provider em2</span><br></pre></td></tr></table></figure>

</li>
<li><p>启动服务</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">systemctl enable libvirtd.service openstack-nova-compute.service neutron-openvswitch-agent.service</span><br><span class="line">   systemctl start libvirtd.service openstack-nova-compute.service  neutron-openvswitch-agent.service</span><br></pre></td></tr></table></figure>

</li>
</ol>
<p>如果nova-compute服务无法启动，请检查 /var/log/nova/nova-compute.log。该错误消息可能表明控制器节点上的防火墙阻止访问端口5672。将防火墙配置为打开控制器节点上的端口5672并重新启动 计算节点上的服务。AMQP server on controller:5672 is unreachablenova-compute</p>
<h1 id="发现计算节点"><a href="#发现计算节点" class="headerlink" title="发现计算节点"></a>发现计算节点</h1><ol>
<li><p>手动发现计算节点</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">su -s &#x2F;bin&#x2F;sh -c &quot;nova-manage cell_v2 discover_hosts --verbose&quot; nova</span><br></pre></td></tr></table></figure>
</li>
<li><p>自动发现计算节点</p>
<p> # 涉及控制节点nova.conf文件的[scheduler]标签；</p>
<p>如下设置自动发现时间为5min，可根据实际环境调节添加新计算节点时，必须在控制器节点上运行以注册这些新计算节点。或者，您可以在以下位置设置适当的间隔来代替nova-manage cell_v2 discover_hosts/etc/nova/nova.conf</p>
</li>
</ol>
<p>vim /etc/nova/nova.conf</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[scheduler]</span><br><span class="line">discover_hosts_in_cells_interval &#x3D; 300</span><br></pre></td></tr></table></figure></li>
<li><p>重启nova服务，配置生效</p>
<p>   systemctl restart openstack-nova-api.service</p>
<h1 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h1></li>
</ol>
<p>登陆dashboard，管理员–&gt;计算–&gt;虚拟机管理器</p>
<p>如果已注册成功，在”虚拟机管理器”标签下可发现计算节点，并能展示出各计算节点的资源；如果未注册或注册失败，则”虚拟机管理器”标签下无主机。此界面显示的是逻辑核数，不是超分后的资源</p>
<p><img src="/images/OpenStack-Train-nova%E8%AE%A1%E7%AE%97%E8%8A%82%E7%82%B9%E5%AE%89%E8%A3%85-%E5%85%AB/image-20210201161338196.png" alt="image-20210201161338196"></p>
<p>参考文档:</p>
<p><a href="https://docs.openstack.org/nova/train/install/compute-install-rdo.html#install-and-configure-components">https://docs.openstack.org/nova/train/install/compute-install-rdo.html#install-and-configure-components</a></p>
<p><a href="https://docs.openstack.org/neutron/train/admin/deploy-ovs-provider.html">https://docs.openstack.org/neutron/train/admin/deploy-ovs-provider.html</a></p>
<p><a href="http://poweroff.cn/openstack/362.html">http://poweroff.cn/openstack/362.html</a></p>
]]></content>
      <categories>
        <category>openstack</category>
      </categories>
  </entry>
  <entry>
    <title>OpenStack-Train-neutron-创建网络及子网-(九)</title>
    <url>/2021/02/01/OpenStack-Train-neutron-%E5%88%9B%E5%BB%BA%E7%BD%91%E7%BB%9C%E5%8F%8A%E5%AD%90%E7%BD%91-%E4%B9%9D/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>前面open stack基本环境已经搭建完毕，本章将介绍如何创建网络及子网，由于使用provider网络，租户无法创建自己的网路，网络需要管理admin创建.</p>
<a id="more"></a>



<h1 id="登录控制台"><a href="#登录控制台" class="headerlink" title="登录控制台"></a>登录控制台</h1><ol>
<li>控制台地址</li>
</ol>
<p><a href="http://10.14.32.11/dashboard/admin/networks/">http://10.14.32.11/dashboard/admin/networks/</a>     admin   ADMIN_PASS</p>
<ol start="2">
<li><p>依次点击管理员-网络-创建网络</p>
<p><img src="/images/OpenStack-Train-neutron-%E5%88%9B%E5%BB%BA%E7%BD%91%E7%BB%9C%E5%8F%8A%E5%AD%90%E7%BD%91-%E4%B9%9D/image-20210201171003832.png" alt="image-20210201171003832"></p>
</li>
<li><p>查看创建的网络</p>
<p><img src="/images/OpenStack-Train-neutron-%E5%88%9B%E5%BB%BA%E7%BD%91%E7%BB%9C%E5%8F%8A%E5%AD%90%E7%BD%91-%E4%B9%9D/image-20210201171035420.png" alt="image-20210201171035420"></p>
</li>
<li><p>创建子网，点击已经创建成功的网络，进入点击“创建子网”</p>
<p><img src="/images/OpenStack-Train-neutron-%E5%88%9B%E5%BB%BA%E7%BD%91%E7%BB%9C%E5%8F%8A%E5%AD%90%E7%BD%91-%E4%B9%9D/image-20210201171307816.png" alt="image-20210201171307816"></p>
</li>
</ol>
<p>至此网络已经创建成功，下一章将制作镜像测试启动实例.</p>
]]></content>
      <categories>
        <category>openstack</category>
      </categories>
  </entry>
  <entry>
    <title>Docker搭建FTP服务器</title>
    <url>/2021/02/02/Docker%E6%90%AD%E5%BB%BAFTP%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>docker 安装ftp服务，大大节省了部署时间</p>
<a id="more"></a>



<ol>
<li><p>寻找vsftpd的镜像 ，找到星星最多的</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker search vsftpd</span><br></pre></td></tr></table></figure></li>
<li><p>拉取镜像</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker pull fauria&#x2F;vsftpd</span><br></pre></td></tr></table></figure></li>
<li><p>查看本地镜像</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker images</span><br></pre></td></tr></table></figure></li>
<li><p>运行容器</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker run -d  -p 21:21 -p 20:20 -p 21100-21110:21100-21110 -v &#x2F;Data&#x2F;Ftpfile:&#x2F;home&#x2F;vsftpd  -e FTP_USER&#x3D;ftp_user1 -e FTP_PASS&#x3D;D#5O2fr6JfK1 -e REVERSE_LOOKUP_ENABLE&#x3D;NO -e PASV_ADDRESS&#x3D;172.30.95.101 -e PASV_MIN_PORT&#x3D;21100 -e PASV_MAX_PORT&#x3D;21110 --name ftpserver --restart&#x3D;always fauria&#x2F;vsftpd </span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#-p 进行端口绑定映射</span><br><span class="line">#-v 添加容器数据卷</span><br><span class="line">#-e FTP_USER&#x3D;moti -e FTP_PASS&#x3D;moti 添加一个初始化用户moti</span><br><span class="line">#PASV_MIN_PORT和PASV_MAX_PORT映射的是被动模式下端口使用范围</span><br><span class="line">#-name vsftpd 为容器命名为vsftpd </span><br><span class="line">#--restart&#x3D;always fauria&#x2F;vsftpd docker重启的时候自动启动这个容器</span><br></pre></td></tr></table></figure></li>
<li><p>完善ftp配置</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 我们先进入container里面 </span><br><span class="line">docker exec -i -t vsftpd bash </span><br><span class="line"></span><br><span class="line"># 修改并生成虚拟用户模式下的用户db文件，向文件中最后两行写入用户名和密码</span><br><span class="line">vi &#x2F;etc&#x2F;vsftpd&#x2F;virtual_users.txt</span><br><span class="line"></span><br><span class="line">#假如我们添加了molihub用户，我们需要建立对应用户的文件夹</span><br><span class="line">mkdir &#x2F;home&#x2F;vsftpd&#x2F;molihub</span><br><span class="line"></span><br><span class="line">#把登录的验证信息写入数据库 </span><br><span class="line">&#x2F;usr&#x2F;bin&#x2F;db_load -T -t hash -f &#x2F;etc&#x2F;vsftpd&#x2F;virtual_users.txt &#x2F;etc&#x2F;vsftpd&#x2F;virtual_users.db</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>注意： 执行docker restart ftpserver 会把vsftpd.conf内容重新追加一份到/etc/vsftpd/vsftpd.conf。通过工具上传文件，浏览器访问<a href="ftp://x.x.x.x/">ftp://x.x.x.x</a> 出现中文乱码，此时需要修改工具的字符集关闭UTF-8即可</p>
</li>
</ol>
<p>参考文档:</p>
<p><a href="https://github.com/fauria/docker-vsftpd/blob/master/run-vsftpd.sh">https://github.com/fauria/docker-vsftpd/blob/master/run-vsftpd.sh</a></p>
]]></content>
      <categories>
        <category>ftp</category>
      </categories>
  </entry>
  <entry>
    <title>OpenStack-Train制作镜像模板-(十)</title>
    <url>/2021/02/01/OpenStack-Train%E5%88%B6%E4%BD%9C%E9%95%9C%E5%83%8F%E6%A8%A1%E6%9D%BF-%E5%8D%81/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>本章介绍如何制作安全镜像，通过cloud-init脚本初始化镜像参数</p>
<a id="more"></a>

<h1 id="基础设置"><a href="#基础设置" class="headerlink" title="基础设置"></a>基础设置</h1><p>在制作镜像之前需要一个纯净的操作系统</p>
<ol>
<li><p>安装基础软件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">yum install unzip wget lrzsz net-tools ntp vim -y</span><br></pre></td></tr></table></figure></li>
<li><p>安装kvm软件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">yum install qemu-kvm libvirt libguestfs-tools virt-install virt-manager libvirt-python上传iso镜像</span><br></pre></td></tr></table></figure></li>
<li><p>启动libvirtd服务</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">systemctl start libvirtd.service</span><br><span class="line">systemctl status libvirtd.service</span><br></pre></td></tr></table></figure></li>
<li><p>调用kvm图形创建虚机</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">qemu-img create -f qcow2 CENTOS_7.6_S_64_X_20_X.qcow2 20G</span><br><span class="line">virt-install --virt-type kvm --name centos7-template --ram 4096  --cdrom=/usr/local/src/CentOS-7.6-x86_64-bin-DVD.iso  --disk /usr/local/src/CENTOS_7.6_S_64_X_20_X.qcow2,format=qcow2,device=disk,bus=virtio  --network network=default,model=virtio  --graphics vnc,listen=0.0.0.0 --noautoconsole  --os-type=linux </span><br></pre></td></tr></table></figure>
<p>–virt-type kvm 虚拟化的类型(不写此参数默认为qemu)<br>–os-type=linux 系统类型<br>–os-variant rhel7 系统版本<br>–name centos7 虚拟机的名字<br>–memory 1024 虚拟机的内存<br>–vcpus 1 虚拟cpu的核数 –disk /opt/centos01.raw,format=raw,size=10<br>–cdrom /opt/CentOS-7-x86_64-DVD-1708.iso 系统镜像<br>–network network=default 使用默认桥接的网络<br>–graphics vnc,listen=0.0.0.0<br>–noautoconsole</p>
</li>
</ol>
<h1 id="定制操作系统"><a href="#定制操作系统" class="headerlink" title="定制操作系统"></a>定制操作系统</h1><ol>
<li><p>需要手动启动操作系统</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">virsh list --all</span><br><span class="line">virsh start centos7-template</span><br></pre></td></tr></table></figure></li>
<li><p>配置系统服务</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">systemctl stop firewalld</span><br><span class="line">systemctl disable firewalld</span><br><span class="line">systemctl stop NetworkManager</span><br><span class="line">systemctl disable NetworkManager</span><br><span class="line">yum install unzip wget lrzsz net-tools vim -y</span><br></pre></td></tr></table></figure></li>
<li><p>配置网络环境</p>
<p>vim /etc/sysconfig/network-scripts/ifcfg-eth0 </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">BOOTPROTO&#x3D;dhcp</span><br><span class="line">DEVICE&#x3D;eth0</span><br><span class="line">ONBOOT&#x3D;yes</span><br></pre></td></tr></table></figure></li>
<li><p>优化sshd</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">UseDNS no</span><br></pre></td></tr></table></figure>
<p>重启sshd服务</p>
</li>
<li><p>更换yum源</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mv &#x2F;etc&#x2F;yum.repos.d&#x2F;CentOS-Base.repo &#x2F;etc&#x2F;yum.repos.d&#x2F;CentOS-Base.repo.backup</span><br><span class="line">wget -O &#x2F;etc&#x2F;yum.repos.d&#x2F;CentOS-Base.repo https:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;repo&#x2F;Centos-7.repo</span><br><span class="line">wget -O &#x2F;etc&#x2F;yum.repos.d&#x2F;epel.repo http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;repo&#x2F;epel-7.repo</span><br></pre></td></tr></table></figure>

</li>
<li><p>安装cloud-init 软件，用于初始化实例</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">yum -y install cloud-int</span><br></pre></td></tr></table></figure>

</li>
<li><p>通过cloud-int 初始化系统</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cat &gt;&gt;&#x2F;etc&#x2F;cloud&#x2F;cloud.cfg&lt;&lt;eof</span><br><span class="line">users:</span><br><span class="line"> - default</span><br><span class="line"></span><br><span class="line">disable_root: 1</span><br><span class="line">ssh_pwauth:   1</span><br><span class="line">chpasswd: &#123;expire: False&#125;</span><br><span class="line"></span><br><span class="line">mount_default_fields: [~, ~, &#39;auto&#39;, &#39;defaults,nofail,x-systemd.requires&#x3D;cloud-init.service&#39;, &#39;0&#39;, &#39;2&#39;]</span><br><span class="line">resize_rootfs_tmp: &#x2F;dev</span><br><span class="line">ssh_deletekeys:   0</span><br><span class="line">ssh_genkeytypes:  ~</span><br><span class="line">syslog_fix_perms: ~</span><br><span class="line">disable_vmware_customization: false</span><br><span class="line"></span><br><span class="line">cloud_init_modules:</span><br><span class="line"> - disk_setup</span><br><span class="line"> - migrator</span><br><span class="line"> - bootcmd</span><br><span class="line"> - write-files</span><br><span class="line"> - growpart</span><br><span class="line"> - resizefs</span><br><span class="line"># - set_hostname</span><br><span class="line"># - update_hostname</span><br><span class="line"># - update_etc_hosts</span><br><span class="line"> - rsyslog</span><br><span class="line"> - users-groups</span><br><span class="line"> - ssh</span><br><span class="line"></span><br><span class="line">cloud_config_modules:</span><br><span class="line"> - mounts</span><br><span class="line"> - locale</span><br><span class="line"> - set-passwords</span><br><span class="line"> - rh_subscription</span><br><span class="line"> - yum-add-repo</span><br><span class="line"> - package-update-upgrade-install</span><br><span class="line"> - timezone</span><br><span class="line"> - puppet</span><br><span class="line"> - chef</span><br><span class="line"> - salt-minion</span><br><span class="line"> - mcollective</span><br><span class="line"> - disable-ec2-metadata</span><br><span class="line"> - runcmd</span><br><span class="line"></span><br><span class="line">cloud_final_modules:</span><br><span class="line"> - rightscale_userdata</span><br><span class="line"> - scripts-per-once</span><br><span class="line"> - scripts-per-boot</span><br><span class="line"> - scripts-per-instance</span><br><span class="line"> - scripts-user</span><br><span class="line"> - ssh-authkey-fingerprints</span><br><span class="line"> - keys-to-console</span><br><span class="line"> - phone-home</span><br><span class="line"> - final-message</span><br><span class="line"> - power-state-change</span><br><span class="line"></span><br><span class="line">system_info:</span><br><span class="line">  default_user:</span><br><span class="line">    name: centos</span><br><span class="line">    lock_passwd: False</span><br><span class="line">    gecos: Cloud User</span><br><span class="line">    groups: [wheel, adm, systemd-journal]</span><br><span class="line">    passwd: $1$eloancn$fLB5JbxJp0QPEb0iWRXPv1</span><br><span class="line">    sudo: [&quot;ALL&#x3D;(ALL) NOPASSWD:ALL&quot;]</span><br><span class="line">    shell: &#x2F;bin&#x2F;bash</span><br><span class="line">  distro: rhel</span><br><span class="line">  paths:</span><br><span class="line">    cloud_dir: &#x2F;var&#x2F;lib&#x2F;cloud</span><br><span class="line">    templates_dir: &#x2F;etc&#x2F;cloud&#x2F;templates</span><br><span class="line">  ssh_svcname: sshd</span><br><span class="line">runcmd:</span><br><span class="line"> - [ bash, &#x2F;usr&#x2F;local&#x2F;src&#x2F;extend_root_fs.sh ]</span><br><span class="line"></span><br><span class="line"># vim:syntax&#x3D;yaml</span><br><span class="line">eof</span><br></pre></td></tr></table></figure>


<p>增加centos用户用于登录系统,默认密码是eloancn@123,使用如下命令可以获得加密的密码</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">openssl passwd -1 eloancn@123</span><br></pre></td></tr></table></figure>
</li>
<li><p>服务器关机并上传模板到镜像服务器</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">glance image-create --name CENTOS_7.6_X86_64 --visibility public --min-disk 20 --property os_type&#x3D;linux --container-format bare --disk-format qcow2 --file &#x2F;usr&#x2F;local&#x2F;src&#x2F;CENTOS_7.6_S_64_X_20_X.qcow2 --progress</span><br></pre></td></tr></table></figure>




</li>
</ol>
]]></content>
  </entry>
  <entry>
    <title>Docker搭建svn服务器</title>
    <url>/2021/02/03/Docker%E6%90%AD%E5%BB%BAsvn%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>本文中是基于dcoker镜像elleflorio/svn-server进行部署,包含数据全备、增量备份等</p>
<a id="more"></a>

<h1 id="宿主机创建相关目录"><a href="#宿主机创建相关目录" class="headerlink" title="宿主机创建相关目录"></a>宿主机创建相关目录</h1><ol>
<li><p>创建目录</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mkdir &#x2F;Data&#x2F;&#x2F;svnserver&#x2F;svnconfig -p</span><br><span class="line">chown -R 777 &#x2F;Data&#x2F;svnserver&#x2F;</span><br></pre></td></tr></table></figure>
<p>创建放svn配置及仓库的目录</p>
<p>仓库给予权限为777，否则在svnadmin无法创建目录</p>
</li>
<li><p>拉取最新镜像</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker pull elleflorio&#x2F;svn-server</span><br></pre></td></tr></table></figure></li>
<li><p>运行容器</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker run --privileged&#x3D;true -d --name svn-server -p 8011:80 -p 3690:3690 -v elleflorio&#x2F;svn-server</span><br></pre></td></tr></table></figure></li>
<li><p>复制容器中SVN配置文件至宿主机</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker cp svn-server:&#x2F;etc&#x2F;subversion &#x2F;Data&#x2F;svnserver&#x2F;svnconfig&#x2F;</span><br></pre></td></tr></table></figure></li>
<li><p>停止并移除容器</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker stop svn-server</span><br><span class="line">docker rm svn-server</span><br></pre></td></tr></table></figure></li>
<li><p>运行容器并挂载配置及SVN目录</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker run --privileged&#x3D;true -d --name svn-server -p 8000:80 -p 3690:3690   -v &#x2F;Data&#x2F;svnserver:&#x2F;home&#x2F;svn   -v &#x2F;Data&#x2F;svnserver&#x2F;svnconfig&#x2F;subversion-access-control:&#x2F;etc&#x2F;subversion&#x2F;subversion-access-control    -v &#x2F;Data&#x2F;svnserver&#x2F;svnconfig&#x2F;passwd:&#x2F;etc&#x2F;subversion&#x2F;passwd    elleflorio&#x2F;svn-server </span><br></pre></td></tr></table></figure></li>
<li><p>配置svnadmin配置svn用户授权路径</p>
<p><a href="http://172.30.95.101:8000/">http://172.30.95.101:8000</a></p>
<p><img src="/images/Docker%E6%90%AD%E5%BB%BAsvn%E6%9C%8D%E5%8A%A1%E5%99%A8/image-20210203155316530.png" alt="image-20210203155316530"></p>
<ol start="8">
<li><p>配置认证文件及命令执行路径</p>
<p><img src="/images/Docker%E6%90%AD%E5%BB%BAsvn%E6%9C%8D%E5%8A%A1%E5%99%A8/image-20210203160820008.png" alt="image-20210203160820008"></p>
</li>
</ol>
</li>
</ol>
<p>​       点击保存后，会默认创建admin/admin用户，进入界面后可修改admin的默认密码。</p>
<h1 id="数据备份"><a href="#数据备份" class="headerlink" title="数据备份"></a>数据备份</h1><ol>
<li><p>全备数据脚本</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cat &gt;&gt;svn-backup.sh&lt;&lt;eof</span><br><span class="line">#!&#x2F;bin&#x2F;bash</span><br><span class="line">repos_path&#x3D;&quot;&#x2F;home&#x2F;svn&#x2F;filesystem&#x2F;&quot;</span><br><span class="line">back_path&#x3D;&quot;&#x2F;home&#x2F;svn&#x2F;backup&#x2F;svn&quot;</span><br><span class="line">Date&#x3D;&#96;date +%Y%m%d&#96;</span><br><span class="line">cd $back_path</span><br><span class="line">echo &#96;date&#96; &gt;&gt; $back_path&#x2F;svn_backup.log</span><br><span class="line">youngest&#x3D;&#96;svnlook youngest $repos_path&#96;</span><br><span class="line"></span><br><span class="line">svnadmin dump --revision 0:$youngest $repos_path|gzip &gt; $back_path&#x2F;filesystem-bak-full.$Date.gz</span><br><span class="line">if [ $? -eq 0 ];</span><br><span class="line">then</span><br><span class="line">echo &quot;$Date filesystem Full amount of backup success&quot; &gt;&gt; $back_path&#x2F;svn_backup.log</span><br><span class="line">else </span><br><span class="line">echo &quot;$Date filesystem Full amount of backup failed&quot; &gt;&gt; $back_path&#x2F;svn_backup.log</span><br><span class="line">fi</span><br><span class="line">echo $youngest &gt; $back_path&#x2F;youngest_revision</span><br><span class="line">##upload remote server                                 </span><br><span class="line">scp $back_path&#x2F;filesystem-bak-full.$Date.gz  172.30.95.102:&#x2F;Data&#x2F;backup&#x2F;svn&#x2F;</span><br><span class="line">                                                                                                  </span><br><span class="line">##delete backup                                                                                   </span><br><span class="line">find $backup_path -type f -mtime +3  -exec rm -rf &#123;&#125; \; </span><br><span class="line">eof</span><br></pre></td></tr></table></figure>
<p>脚本中通过scp 把备份文件远程拷贝到172.30.95.102，请自行配置ssh互信，本地全备备份文件保留3天时间</p>
</li>
<li><p>增量备份脚本</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cat &gt;&gt;svn-backup-inc.sh&lt;&lt;eof</span><br><span class="line">#!&#x2F;bin&#x2F;bash</span><br><span class="line">repos_path&#x3D;&quot;&#x2F;home&#x2F;svn&#x2F;filesystem&quot;</span><br><span class="line">Date&#x3D;&#96;date +%Y%m%d&#96;</span><br><span class="line">backup_path&#x3D;&quot;&#x2F;home&#x2F;svn&#x2F;backup&#x2F;svn&quot;</span><br><span class="line">echo &#96;date&#96; &gt;&gt; $backup_path&#x2F;svn_backup.log</span><br><span class="line">pre_youngest&#x3D;&#96;cat $backup_path&#x2F;youngest_revision&#96;</span><br><span class="line">youngest&#x3D;&#96;svnlook youngest $repos_path&#96;</span><br><span class="line"></span><br><span class="line">if [ $pre_youngest -eq $youngest ]</span><br><span class="line">then</span><br><span class="line">        echo &quot;filesystem has no new revisions to backup.&quot; &gt;&gt; $backup_path&#x2F;svn_backup.log</span><br><span class="line">continue</span><br><span class="line">fi</span><br><span class="line">first_youngest&#x3D;$(($pre_youngest+1))</span><br><span class="line"></span><br><span class="line">svnadmin dump  --incremental  --revision $first_youngest:$youngest $repos_path| gzip &gt; $backup_path&#x2F;filesystem.inc-$first_youngest-$youngest.$Date.gz</span><br><span class="line">if [ $? -eq 0 ];</span><br><span class="line">then</span><br><span class="line">        echo &quot;$Date filesystem backup success&quot;</span><br><span class="line">else</span><br><span class="line">        echo &quot;$Date filesystem backup failed&quot;</span><br><span class="line">fi</span><br><span class="line">echo $youngest &gt; $backup_path&#x2F;youngest_revision</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">##upload remote server</span><br><span class="line">scp $backup_path&#x2F;filesystem.inc-$first_youngest-$youngest.$Date.gz 172.30.95.102:&#x2F;Data&#x2F;backup&#x2F;svn&#x2F;</span><br><span class="line"></span><br><span class="line">##delete backup</span><br><span class="line">find $backup_path -type f -mtime +7  -exec rm -rf &#123;&#125; \;</span><br><span class="line">eof</span><br></pre></td></tr></table></figure>
<p>脚本中通过scp 把备份文件远程拷贝到172.30.95.102，请自行配置ssh互信，本地增量备份文件保留7天时间</p>
</li>
<li><p>配置定时任务</p>
<p>docker镜像默认没有启动定时任务服务器，需要手动启动，手动启动，手动启动!</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker exec -it svn-server &#x2F;bin&#x2F;sh</span><br><span class="line">crond</span><br><span class="line">crontab -e</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p><img src="/images/Docker%E6%90%AD%E5%BB%BAsvn%E6%9C%8D%E5%8A%A1%E5%99%A8/image-20210203164000736.png" alt="image-20210203164000736"></p>
</li>
</ol>
<p>​            每周六全备，周日-周五增量备份</p>
<p>参考文档:</p>
<p><a href="https://blog.csdn.net/qq_25568881/article/details/103753005">https://blog.csdn.net/qq_25568881/article/details/103753005</a></p>
]]></content>
      <categories>
        <category>svn</category>
      </categories>
  </entry>
  <entry>
    <title>Docker搭建gitlab服务</title>
    <url>/2021/02/04/Docker%E6%90%AD%E5%BB%BAgitlab%E6%9C%8D%E5%8A%A1/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>公司内部存在svn、gitlab 两种版本控制系统，为了维护方便故采用docker 容器部署方式，服务器IP192.168.0.60，docker环境部署不再本章描述。</p>
<a id="more"></a>

<h1 id="下载镜像"><a href="#下载镜像" class="headerlink" title="下载镜像"></a>下载镜像</h1><ol>
<li><p>下载stars 最多的镜像</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker search gitlab-ce-zh</span><br></pre></td></tr></table></figure>
<p><img src="/images/Docker%E6%90%AD%E5%BB%BAgitlab%E6%9C%8D%E5%8A%A1/image-20210204101504636.png" alt="image-20210204101504636"></p>
</li>
<li><p>下载镜像</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker pull twang2218&#x2F;gitlab-ce-zh</span><br></pre></td></tr></table></figure></li>
<li><p>运行 Gitlab 容器</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker run --detach      \</span><br><span class="line">--hostname gitlab.eloancn.com  \</span><br><span class="line">--publish 443:443        \</span><br><span class="line">--publish 80:80 --publish 10022:22  \</span><br><span class="line">-e &#39;GITLAB_SSH_PORT&#x3D;10022&#39;            \</span><br><span class="line">--name gitlab            \</span><br><span class="line">--restart always             \</span><br><span class="line">--volume &#x2F;Data&#x2F;gitlab&#x2F;backup:&#x2F;var&#x2F;opt&#x2F;gitlab&#x2F;backups  \</span><br><span class="line">--volume &#x2F;Data&#x2F;gitlab&#x2F;config:&#x2F;etc&#x2F;gitlab           \</span><br><span class="line">--volume &#x2F;Data&#x2F;gitlab&#x2F;logs:&#x2F;var&#x2F;log&#x2F;gitlab          \</span><br><span class="line">--volume &#x2F;Data&#x2F;gitlab&#x2F;datas:&#x2F;var&#x2F;opt&#x2F;gitlab twang2218&#x2F;gitlab-ce-zh</span><br></pre></td></tr></table></figure></li>
<li><p>修改配置</p>
<p>进入gitlab的配置目录，修改对应的配置（根据容器的启动命令修改对应的端口号，如果是80端口则不需要修改）</p>
<p>cd /Data/gitlab/config,vim gitlab.rb</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vim gitlab.rb 修改如下几项</span><br><span class="line"></span><br><span class="line">external_url &#39;http:&#x2F;&#x2F;192.168.0.60&#39;</span><br><span class="line">nginx[&#39;listen_port&#39;] &#x3D; 80 ## 容器内的端口，配置后会将宿主机的88跳转到容器的80</span><br><span class="line">gitlab_rails[&#39;gitlab_ssh_host&#39;] &#x3D; &#39;192.168.0.60&#39;</span><br><span class="line">gitlab_rails[&#39;gitlab_shell_ssh_port&#39;] &#x3D; 10022</span><br></pre></td></tr></table></figure></li>
<li><p>测试</p>
<p><a href="http://192.168.0.60/">http://192.168.0.60</a></p>
<p><img src="/images/Docker%E6%90%AD%E5%BB%BAgitlab%E6%9C%8D%E5%8A%A1/image-20210204103157728.png" alt="image-20210204103157728"></p>
</li>
</ol>
<h1 id="配置邮件"><a href="#配置邮件" class="headerlink" title="配置邮件"></a>配置邮件</h1><ol>
<li><p>修改配置文件</p>
<p>vim gitlab.rb  修改为如下配置</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">gitlab_rails[&#39;gitlab_email_enabled&#39;] &#x3D; true</span><br><span class="line">gitlab_rails[&#39;gitlab_email_from&#39;] &#x3D; &#39;xxx@eloancn.com&#39;</span><br><span class="line">gitlab_rails[&#39;gitlab_email_display_name&#39;] &#x3D; &#39;Gitlab&#39;</span><br><span class="line">gitlab_rails[&#39;gitlab_shell_ssh_port&#39;] &#x3D; 10022</span><br><span class="line">gitlab_rails[&#39;smtp_enable&#39;] &#x3D; true</span><br><span class="line">gitlab_rails[&#39;smtp_address&#39;] &#x3D; &quot;smtp.qiye.163.com&quot;</span><br><span class="line">gitlab_rails[&#39;smtp_port&#39;] &#x3D; 465</span><br><span class="line">gitlab_rails[&#39;smtp_user_name&#39;] &#x3D; &quot;xxxx@eloancn.com&quot;</span><br><span class="line">gitlab_rails[&#39;smtp_password&#39;] &#x3D; &quot;XXXXXXXXXXXX&quot;   #邮件服务器客户端授权码，不是邮箱密码</span><br><span class="line">gitlab_rails[&#39;smtp_domain&#39;] &#x3D; &quot;163.com&quot;</span><br><span class="line">gitlab_rails[&#39;smtp_authentication&#39;] &#x3D; &quot;login&quot;</span><br><span class="line">gitlab_rails[&#39;smtp_enable_starttls_auto&#39;] &#x3D; true</span><br><span class="line">gitlab_rails[&#39;smtp_tls&#39;] &#x3D; true</span><br></pre></td></tr></table></figure></li>
<li><p>重新配置gitlab</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker exec -it gitlab &#x2F;bin&#x2F;bash</span><br><span class="line"></span><br><span class="line">gitlab-ctl reconfigure</span><br></pre></td></tr></table></figure></li>
<li><p>测试发送邮件</p>
<p>执行命令<code>gitlab-ctl console</code>测试发邮件，进入控制台之后执行命令</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker exec -it gitlab &#x2F;bin&#x2F;bash</span><br><span class="line">gitlab-rails console</span><br><span class="line"> Notify.test_email(&#39;你的收件邮箱&#39;, &#39;测试邮件标题&#39;, &#39;测试邮件正文&#39;).deliver_now</span><br></pre></td></tr></table></figure>
<h1 id="数据备份"><a href="#数据备份" class="headerlink" title="数据备份"></a>数据备份</h1></li>
<li><p>进入容器安装定时任务</p>
<p>配置镜像没有安装定时任务，需要自己重新安装然后封装为新镜像，数据无价，多做备份，谨慎操作！</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker exec -it gitlab &#x2F;bin&#x2F;bash</span><br><span class="line"></span><br><span class="line">apt-get update</span><br><span class="line">apt-get install cron</span><br></pre></td></tr></table></figure>

</li>
<li><p>创建备份</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">gitlab-rake gitlab:backup:create</span><br></pre></td></tr></table></figure></li>
<li><p>查看定时任务</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">crontab -l</span><br></pre></td></tr></table></figure>
<p><img src="/images/Docker%E6%90%AD%E5%BB%BAgitlab%E6%9C%8D%E5%8A%A1/image-20210204104603021.png" alt="image-20210204104603021"></p>
</li>
<li><p>查看备份文件</p>
<p><img src="/images/Docker%E6%90%AD%E5%BB%BAgitlab%E6%9C%8D%E5%8A%A1/image-20210204104815756.png" alt="image-20210204104815756"></p>
</li>
<li><p>异地备份</p>
<p>上面已经将数据文件备份到本地目录，现在要拷贝到远程主机，远程主机自己配置ssh互信,通过定时任务rsync到目的主机</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">59 2 * * * rsync -avz &#x2F;Data&#x2F;gitlab&#x2F;backup&#x2F; 192.168.2.60:&#x2F;home&#x2F;nova&#x2F;small-loan-gitlab-backup&#x2F; &gt; &#x2F;dev&#x2F;null 2&gt;&amp;1 </span><br></pre></td></tr></table></figure>
<h1 id="数据恢复"><a href="#数据恢复" class="headerlink" title="数据恢复"></a>数据恢复</h1></li>
<li><p>环境准备</p>
<p>本节说明如何在另一台主机上恢复数据。将备份文件拷贝到<code>/var/opt/gitlab/backups</code>下，恢复主机自行安装gitlab 服务，目标gitlab 执行如下操作</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">gitlab-ctl stop unicorn</span><br><span class="line">gitlab-ctl stop sidekiq</span><br></pre></td></tr></table></figure>

</li>
<li><p>从指定备份恢复</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">gitlab-rake gitlab:backup:restore BACKUP&#x3D;1605078596</span><br></pre></td></tr></table></figure></li>
<li><p>启动gitlab</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">gitlab-ctl start</span><br><span class="line">gitlab-ctl reconfigure</span><br></pre></td></tr></table></figure>


























</li>
</ol>
]]></content>
      <categories>
        <category>gitlab</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>企业级dns部署</title>
    <url>/2021/02/04/%E4%BC%81%E4%B8%9A%E7%BA%A7dns%E9%83%A8%E7%BD%B2/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>企业内部大部分应用配置文件都采用ip地址或者配置本地host连接，不便于应用配置变更。本章将描述如何部署dns和namedmanager管理控制台。</p>
<a id="more"></a>

<h1 id="环境信息"><a href="#环境信息" class="headerlink" title="环境信息"></a>环境信息</h1><ol>
<li><p>服务器规划</p>
<table>
<thead>
<tr>
<th>IP</th>
<th>VIP</th>
<th>主机名称</th>
<th>配置信息</th>
<th>软件</th>
<th>备注</th>
</tr>
</thead>
<tbody><tr>
<td>192.168.1.58</td>
<td></td>
<td>dns-master.host.com</td>
<td>4C8G200G</td>
<td>bind9、keepalived</td>
<td>dns主</td>
</tr>
<tr>
<td>192.168.1.59</td>
<td>192.168.1.99</td>
<td>dns-slave.host.com</td>
<td>4C8G200G</td>
<td>bind9、keepalived</td>
<td>dns从</td>
</tr>
<tr>
<td>192.168.1.70</td>
<td></td>
<td>mysqldb.host.com</td>
<td>4C8G200G</td>
<td>namedmanager、mariadb</td>
<td>单点</td>
</tr>
</tbody></table>
<p>namedmanager管理控制台出问题并不会影响dns解析故采用单点模式</p>
</li>
<li><p>配置主机名称</p>
<p>分别在各自主机上执行如下命令</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hostnamectl set-hostname  dns-master.host.com</span><br><span class="line">hostnamectl set-hostname  dns-slave.host.com</span><br><span class="line">hostnamectl set-hostname  mysqldb.host.com</span><br></pre></td></tr></table></figure>
<h1 id="安装bind"><a href="#安装bind" class="headerlink" title="安装bind"></a>安装bind</h1></li>
<li><p>主从服务器安装bind9 软件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">yum -y install bind</span><br></pre></td></tr></table></figure></li>
<li><p>主修改配置</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cat &gt;&gt;&#x2F;etc&#x2F;named.conf&lt;&lt;eof</span><br><span class="line">&#x2F;&#x2F;</span><br><span class="line">&#x2F;&#x2F; named.conf</span><br><span class="line">&#x2F;&#x2F;</span><br><span class="line">&#x2F;&#x2F; Provided by Red Hat bind package to configure the ISC BIND named(8) DNS</span><br><span class="line">&#x2F;&#x2F; server as a caching only nameserver (as a localhost DNS resolver only).</span><br><span class="line">&#x2F;&#x2F;</span><br><span class="line">&#x2F;&#x2F; See &#x2F;usr&#x2F;share&#x2F;doc&#x2F;bind*&#x2F;sample&#x2F; for example named configuration files.</span><br><span class="line">&#x2F;&#x2F;</span><br><span class="line">&#x2F;&#x2F; See the BIND Administrator&#39;s Reference Manual (ARM) for details about the</span><br><span class="line">&#x2F;&#x2F; configuration located in &#x2F;usr&#x2F;share&#x2F;doc&#x2F;bind-&#123;version&#125;&#x2F;Bv9ARM.html</span><br><span class="line"></span><br><span class="line">options &#123;</span><br><span class="line">        listen-on port 53 &#123; 192.168.1.58; &#125;;</span><br><span class="line">        directory       &quot;&#x2F;var&#x2F;named&quot;;</span><br><span class="line">        dump-file       &quot;&#x2F;var&#x2F;named&#x2F;data&#x2F;cache_dump.db&quot;;</span><br><span class="line">        statistics-file &quot;&#x2F;var&#x2F;named&#x2F;data&#x2F;named_stats.txt&quot;;</span><br><span class="line">        memstatistics-file &quot;&#x2F;var&#x2F;named&#x2F;data&#x2F;named_mem_stats.txt&quot;;</span><br><span class="line">        recursing-file  &quot;&#x2F;var&#x2F;named&#x2F;data&#x2F;named.recursing&quot;;</span><br><span class="line">        secroots-file   &quot;&#x2F;var&#x2F;named&#x2F;data&#x2F;named.secroots&quot;;</span><br><span class="line">        allow-query     &#123; any; &#125;;</span><br><span class="line"></span><br><span class="line">        &#x2F;* </span><br><span class="line">         - If you are building an AUTHORITATIVE DNS server, do NOT enable recursion.</span><br><span class="line">         - If you are building a RECURSIVE (caching) DNS server, you need to enable </span><br><span class="line">           recursion. </span><br><span class="line">         - If your recursive DNS server has a public IP address, you MUST enable access </span><br><span class="line">           control to limit queries to your legitimate users. Failing to do so will</span><br><span class="line">           cause your server to become part of large scale DNS amplification </span><br><span class="line">           attacks. Implementing BCP38 within your network would greatly</span><br><span class="line">           reduce such attack surface </span><br><span class="line">        *&#x2F;</span><br><span class="line">        recursion yes;</span><br><span class="line"></span><br><span class="line">        dnssec-enable yes;</span><br><span class="line">        dnssec-validation yes;</span><br><span class="line"></span><br><span class="line">        &#x2F;* Path to ISC DLV key *&#x2F;</span><br><span class="line">        bindkeys-file &quot;&#x2F;etc&#x2F;named.root.key&quot;;</span><br><span class="line"></span><br><span class="line">        managed-keys-directory &quot;&#x2F;var&#x2F;named&#x2F;dynamic&quot;;</span><br><span class="line"></span><br><span class="line">        pid-file &quot;&#x2F;run&#x2F;named&#x2F;named.pid&quot;;</span><br><span class="line">        session-keyfile &quot;&#x2F;run&#x2F;named&#x2F;session.key&quot;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">logging &#123;</span><br><span class="line">        channel default_debug &#123;</span><br><span class="line">                file &quot;data&#x2F;named.run&quot;;</span><br><span class="line">                severity dynamic;</span><br><span class="line">        &#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">zone &quot;.&quot; IN &#123;</span><br><span class="line">        type hint;</span><br><span class="line">        file &quot;named.ca&quot;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">include &quot;&#x2F;etc&#x2F;named.rfc1912.zones&quot;;</span><br><span class="line">include &quot;&#x2F;etc&#x2F;named.root.key&quot;;</span><br><span class="line">eof</span><br><span class="line"></span><br></pre></td></tr></table></figure>




</li>
</ol>
]]></content>
      <categories>
        <category>dns</category>
      </categories>
  </entry>
</search>
